import{m as A,j as F,c as x,b,S as w,O as y,t as j,a8 as M,s as C}from"./Bj-Bl9V3.js";import{g as G}from"./wVpfmAyl.js";const _=({selection:f,pluginName:l,clipPathID:$,seriesLabels$:P,gridContainerPosition$:p,gridAxesTransform$:D,gridGraphicTransform$:g})=>{const e=G(l,"series"),n=G(l,"axes"),c=G(l,"graphic"),a=P.pipe(A((s,i)=>f.selectAll(`g.${e}`).data(s,r=>r).join(r=>r.append("g").classed(e,!0).each((v,d,S)=>{C(S[d]).selectAll(`g.${n}`).data([d]).join(m=>m.append("g").classed(n,!0).attr("clip-path",`url(#${$})`).each((R,h,L)=>{C(L[h]).selectAll("defs").data([h]).join("defs"),C(L[h]).selectAll("g").data([h]).join("g").classed(c,!0)}),m=>m,m=>m.remove())}),r=>r,r=>r.remove())),F(1));x({seriesSelection:a,gridContainerPosition:p}).pipe(b(async s=>s)).subscribe(s=>{s.seriesSelection.transition().attr("transform",(i,r)=>{const v=s.gridContainerPosition[r]??s.gridContainerPosition[0],d=v.translate,S=v.scale;return`translate(${d[0]}, ${d[1]}) scale(${S[0]}, ${S[1]})`})});const o=x({seriesSelection:a,gridAxesTransform:D}).pipe(b(async s=>s),A(s=>s.seriesSelection.select(`g.${n}`).style("transform",s.gridAxesTransform.value)),F(1)),t=o.pipe(A(s=>s.select("defs")),F(1)),u=x({axesSelection:o,gridGraphicTransform:g}).pipe(b(async s=>s),A(s=>{const i=s.axesSelection.select(`g.${c}`);return i.transition().duration(50).style("transform",s.gridGraphicTransform.value),i}),F(1));return{seriesSelection$:a,axesSelection$:o,defsSelection$:t,graphicGSelection$:u}},z=({fullDataFormatter$:f,gridAxesSize$:l,computedData$:$,fullChartParams$:P})=>{const p=new w,D=new y(g=>{x({dataFormatter:f,computedData:$}).pipe(j(p),b(async e=>e)).subscribe(e=>{const c=e.computedData[0]?e.computedData[0].length-1:0,a=e.dataFormatter.grid.groupAxis.scaleDomain[0]==="auto"?0-e.dataFormatter.grid.groupAxis.scalePadding:e.dataFormatter.grid.groupAxis.scaleDomain[0]-e.dataFormatter.grid.groupAxis.scalePadding,o=e.dataFormatter.grid.groupAxis.scaleDomain[1]==="auto"?c+e.dataFormatter.grid.groupAxis.scalePadding:e.dataFormatter.grid.groupAxis.scaleDomain[1]+e.dataFormatter.grid.groupAxis.scalePadding,u=(e.dataFormatter.grid.seriesDirection==="row"?(e.computedData[0]??[]).map(s=>s.groupLabel):e.computedData.map(s=>s[0].groupLabel)).filter((s,i)=>i>=a&&i<=o);g.next(u)})});return new y(g=>{x({dataFormatter:f,axisSize:l,fullChartParams:P,scaleRangeGroupLabels:D}).pipe(j(p),b(async e=>e)).subscribe(e=>{const n=e.dataFormatter.grid.valueAxis.position==="right"||e.dataFormatter.grid.valueAxis.position==="bottom",c=M({axisLabels:e.scaleRangeGroupLabels,axisWidth:e.axisSize.width,reverse:n}),a=t=>e.dataFormatter.grid.groupAxis.position==="bottom"||e.dataFormatter.grid.groupAxis.position==="top"?t.offsetX-e.fullChartParams.padding.left:t.offsetY-e.fullChartParams.padding.top,o=t=>{const u=a(t),s=c(u);return{groupIndex:s,groupLabel:e.scaleRangeGroupLabels[s]??""}};return g.next(o),function(){p.next(void 0)}})})};export{z as a,_ as g};
