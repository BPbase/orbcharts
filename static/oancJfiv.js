import{c as $,ad as p,S as l,t as m,e as u,f as d,ae as x}from"./sHDoh0EE.js";import{a as g,c as S}from"./DAvjtiml.js";import{s as A}from"./opDUeYou.js";const n="GroupAxis",C=$(n,p)(({selection:t,name:f,observer:a,subject:c})=>{const s=new l,e=a.fullDataFormatter$.pipe(m(s),u(i=>i.grid.separateSeries),d(),A(1)),r=g(n,{selection:t,computedData$:a.computedData$,fullParams$:a.fullParams$,fullDataFormatter$:a.fullDataFormatter$,fullChartParams$:a.fullChartParams$,gridAxesTransform$:a.gridAxesTransform$,gridAxesReverseTransform$:a.gridAxesReverseTransform$,gridAxesSize$:a.gridAxesSize$,gridContainerPosition$:a.gridContainerPosition$,isSeriesSeprate$:e});return()=>{s.next(void 0),r()}}),o="ValueAxis",F=$(o,x)(({selection:t,name:f,observer:a,subject:c})=>{const s=new l,e=a.fullDataFormatter$.pipe(m(s),u(i=>i.grid.separateSeries),d(),A(1)),r=S(o,{selection:t,computedData$:a.computedData$,fullParams$:a.fullParams$,fullDataFormatter$:a.fullDataFormatter$,fullChartParams$:a.fullChartParams$,gridAxesTransform$:a.gridAxesTransform$,gridAxesReverseTransform$:a.gridAxesReverseTransform$,gridAxesSize$:a.gridAxesSize$,gridContainerPosition$:a.gridContainerPosition$,isSeriesSeprate$:e});return()=>{s.next(void 0),r()}});export{C as G,F as V};
