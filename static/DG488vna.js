import{r as b,i as t,m,l as C,h as x,n as A,p as S,A as P,y as G}from"./DimhisTc.js";import{l as T,g as L,b as R,d as M,e as z,f as k,s as _,i as E,h as U,j as V,k as j,m as v}from"./d4Vqhbx6.js";const H=({subject:i,observer:a})=>{const e=b(a.fullChartParams$).pipe(t(1)),p=a.fullDataFormatter$.pipe(m(r=>r.grid.separateSeries),C(),t(1)),o=T({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}),s=L({fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),c=R({gridAxesTransform$:s}).pipe(t(1)),u=M({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),d=z({gridContainerPosition$:o,gridAxesTransform$:s,gridGraphicTransform$:u}),D=k({fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),l=a.computedData$.pipe(m(r=>r.flat())).pipe(t(1)),n=x({datumList$:l,fullChartParams$:a.fullChartParams$,event$:i.event$}).pipe(t(1)),f=_({computedData$:a.computedData$}),g=A({datumList$:l}).pipe(t(1)),h=S({datumList$:l}).pipe(t(1)),$=E({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),y=U({computedData$:a.computedData$}).pipe(t(1)),F=V({computedLayoutData$:$}).pipe(t(1)),O=j({computedData$:a.computedData$,isSeriesSeprate$:p}).pipe(t(1));return{fullParams$:a.fullParams$,fullChartParams$:a.fullChartParams$,fullDataFormatter$:a.fullDataFormatter$,computedData$:a.computedData$,layout$:a.layout$,textSizePx$:e,isSeriesSeprate$:p,gridContainerPosition$:o,gridAxesTransform$:s,gridAxesReverseTransform$:c,gridGraphicTransform$:u,gridGraphicReverseScale$:d,gridAxesSize$:D,gridHighlight$:n,seriesLabels$:f,SeriesDataMap$:g,GroupDataMap$:h,computedLayoutData$:$,visibleComputedData$:y,visibleComputedLayoutData$:F,computedStackedData$:O}};class w extends P{constructor(a,e){super({defaultDataFormatter:G,computedDataFn:v,contextObserverFn:H},a,e)}}export{w as G};
