import{N as C,E as t,C as m,J as b,B as x,K as P,L as S,P as A,ap as G}from"./_HanNZE-.js";import{m as T,a as L,b as R,d as M,e as z,f as k,s as E,i as _,h as U,j as V,k as j,n as v}from"./CD6lHqiY.js";const B=({subject:i,observer:a})=>{const e=C(a.fullChartParams$).pipe(t(1)),p=a.fullDataFormatter$.pipe(m(r=>r.grid.separateSeries),b(),t(1)),o=T({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}),s=L({fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),c=R({gridAxesTransform$:s}).pipe(t(1)),u=M({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),d=z({gridContainerPosition$:o,gridAxesTransform$:s,gridGraphicTransform$:u}),D=k({fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),l=a.computedData$.pipe(m(r=>r.flat())).pipe(t(1)),n=x({datumList$:l,fullChartParams$:a.fullChartParams$,event$:i.event$}).pipe(t(1)),f=E({computedData$:a.computedData$}),g=P({datumList$:l}).pipe(t(1)),h=S({datumList$:l}).pipe(t(1)),$=_({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),F=U({computedData$:a.computedData$}).pipe(t(1)),O=V({computedLayoutData$:$}).pipe(t(1)),y=j({computedData$:a.computedData$,isSeriesSeprate$:p}).pipe(t(1));return{fullParams$:a.fullParams$,fullChartParams$:a.fullChartParams$,fullDataFormatter$:a.fullDataFormatter$,computedData$:a.computedData$,layout$:a.layout$,textSizePx$:e,isSeriesSeprate$:p,gridContainerPosition$:o,gridAxesTransform$:s,gridAxesReverseTransform$:c,gridGraphicTransform$:u,gridGraphicReverseScale$:d,gridAxesSize$:D,gridHighlight$:n,seriesLabels$:f,SeriesDataMap$:g,GroupDataMap$:h,computedLayoutData$:$,visibleComputedData$:F,visibleComputedLayoutData$:O,computedStackedData$:y}};class J extends A{constructor(a,e){super({defaultDataFormatter:G,computedDataFn:v,contextObserverFn:B},a,e)}}export{J as G};
