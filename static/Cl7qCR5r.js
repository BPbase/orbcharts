import{a as V,p as Z,t as m,m as A,d as w,k as M,l as G,s as F,b8 as ue,aT as ge,b9 as ce,ba as de,g as X,S as W,O as me,h as he,B as xe,r as $e,ad as fe,j as ye,J as De,bb as Ae,bc as Se,bd as J,be as Te,bf as be,bg as Pe}from"./Bh8imPUI.js";import{o as te,p as Le,q as Ce}from"./CorttYm4.js";import{f as Ie}from"./uHoARqe3.js";import{c as Ge}from"./BSwks4Jg.js";import{c as Me}from"./BJF8WTek.js";import{m as Re}from"./Cax8W97L.js";import{d as ee}from"./CpxqH8xq.js";function Be(o="curveLinear",s){return ce().x(e=>e.axisX).y0(e=>s).y1(e=>e.axisY).curve(de[o])}function _e(o){let s=[[]],e=0;for(let r in o){if(o[r].visible==!1||o[r].value===void 0||o[r].value===null){s[e].length&&(e++,s[e]=[]);continue}s[e].push(o[r])}return s}function we({selection:o,pathClassName:s,segmentData:e,areaPath:r,linearGradientIds:i,params:n}){return o.selectAll("path").data(e,(l,p)=>l.length?`${l[0].id}_${l[l.length-1].id}`:p).join(l=>l.append("path").classed(s,!0).attr("fill","none").style("vector-effect","non-scaling-stroke").style("cursor","pointer"),l=>l,l=>l.remove()).attr("fill",(l,p)=>l[0]?`url(#${i[l[0].seriesIndex]})`:"").attr("d",l=>r(l))}function Fe({selection:o,seriesLabel:s,fullChartParams:e}){if(o.interrupt("highlight"),!s){o.transition("highlight").duration(200).style("opacity",1);return}o.each((r,i,n)=>{r===s?F(n[i]).style("opacity",1):F(n[i]).style("opacity",e.styles.unhighlightedOpacity)})}function Oe({defsSelection:o,computedData:s,linearGradientIds:e,params:r}){o.selectAll("linearGradient").data(s??[]).join(i=>i.append("linearGradient").attr("x1","0%").attr("x2","0%").attr("y1","100%").attr("y2","0%").attr("spreadMethod","pad"),i=>i,i=>i.remove()).attr("id",(i,n)=>i[0]?e[i[0].seriesIndex]:"").html((i,n)=>{const h=i[0]?i[0].color:"";return`
        <stop offset="0%"   stop-color="${h}" stop-opacity="${r.linearGradientOpacity[0]}"/>
        <stop offset="100%" stop-color="${h}" stop-opacity="${r.linearGradientOpacity[1]}"/>
      `})}function ke({defsSelection:o,clipPathData:s,transitionDuration:e,transitionEase:r}){o.selectAll("clipPath").data(s).join(i=>i.append("clipPath"),i=>i,i=>i.remove()).attr("id",i=>i.id).each((i,n,h)=>{F(h[n]).selectAll("rect").data([i]).join(l=>{const p=l.append("rect");return p.transition().duration(e).ease(ue(r)).tween("tween",(g,S,x)=>C=>{const T=g.width*C;p.attr("x",0).attr("y",0).attr("width",D=>T).attr("height",D=>D.height)}),p},l=>l.attr("x",0).attr("y",0).attr("width",p=>p.width).attr("height",p=>p.height),l=>l.remove())})}const Ee=(o,{selection:s,computedData$:e,computedAxesData$:r,visibleComputedData$:i,visibleComputedAxesData$:n,seriesLabels$:h,SeriesDataMap$:l,GroupDataMap$:p,fullParams$:g,fullDataFormatter$:S,fullChartParams$:x,gridAxesTransform$:C,gridGraphicTransform$:T,gridAxesSize$:D,gridHighlight$:$,gridContainerPosition$:O,layout$:E,event$:k})=>{const I=new V,v=Z(o,"clipPath-box"),a=X(o,"path"),{seriesSelection$:b,axesSelection$:f,defsSelection$:P,graphicGSelection$:H}=te({selection:s,pluginName:o,clipPathID:v,seriesLabels$:h,gridContainerPosition$:O,gridAxesTransform$:C,gridGraphicTransform$:T}),Y=T.pipe(m(I),A(t=>-t.translate[1]/t.scale[1])),Q=new ge(t=>{const y=M({fullParams:g,valueAxisStart:Y}).pipe(m(I)).subscribe(d=>{const c=Be(d.fullParams.lineCurve,d.valueAxisStart);t.next(c)});return()=>{y.unsubscribe()}}),L=x.pipe(A(t=>t.transitionDuration),w()),z=x.pipe(A(t=>t.transitionEase),w());M({defsSelection:P,seriesLabels:h,axisSize:D,transitionDuration:L,transitionEase:z}).pipe(m(I),G(async t=>t)).subscribe(t=>{const d=[{id:v,width:t.axisSize.width,height:t.axisSize.height}].concat(t.seriesLabels.map(c=>({id:`orbcharts__clipPath_${c}`,width:t.axisSize.width,height:t.axisSize.height})));ke({defsSelection:t.defsSelection,clipPathData:d,transitionDuration:t.transitionDuration,transitionEase:t.transitionEase})});const oe=e.pipe(A(t=>{const y=new Map;return t.flat().forEach(d=>y.set(d.id,d)),y})),se=Le({fullDataFormatter$:S,gridAxesSize$:D,computedData$:e,fullChartParams$:x,gridContainerPosition$:O,layout$:E}),ne=x.pipe(m(I),A(t=>t.highlightTarget),w()),le=h.pipe(m(I),A(t=>t.map((y,d)=>Z(o,`lineargradient-${y}`)))),pe=M({graphicGSelection:H,defsSelection:P,visibleComputedAxesData:n,linearGradientIds:le,areaPath:Q,params:g}).pipe(m(I),G(async t=>t),A(t=>{let y=[];return t.graphicGSelection.each((d,c,R)=>{const N=_e(t.visibleComputedAxesData[c]??[]);y[c]=we({selection:F(R[c]),pathClassName:a,areaPath:t.areaPath,segmentData:N,linearGradientIds:t.linearGradientIds,params:t.params}),Oe({defsSelection:t.defsSelection,computedData:t.visibleComputedAxesData,linearGradientIds:t.linearGradientIds,params:t.params})}),y}));return M({pathSelectionArr:pe,computedData:e,SeriesDataMap:l,GroupDataMap:p,highlightTarget:ne,gridGroupPositionFn:se}).pipe(m(I),G(async t=>t)).subscribe(t=>{t.pathSelectionArr.forEach(y=>{y.on("mouseover",(d,c)=>{const R=c[0]?c[0].seriesLabel:"",{groupIndex:N,groupLabel:B}=t.gridGroupPositionFn(d),u=t.GroupDataMap.get(B).find(_=>_.seriesLabel===R)??c[0];k.next({type:"grid",eventName:"mouseover",pluginName:o,highlightTarget:t.highlightTarget,datum:u,gridIndex:u.gridIndex,series:t.SeriesDataMap.get(u.seriesLabel),seriesIndex:u.seriesIndex,seriesLabel:u.seriesLabel,group:t.GroupDataMap.get(u.groupLabel),groupIndex:u.groupIndex,groupLabel:u.groupLabel,event:d,data:t.computedData})}).on("mousemove",(d,c)=>{const R=c[0]?c[0].seriesLabel:"",{groupIndex:N,groupLabel:B}=t.gridGroupPositionFn(d),u=t.GroupDataMap.get(B).find(_=>_.seriesLabel===R)??c[0];k.next({type:"grid",eventName:"mousemove",pluginName:o,highlightTarget:t.highlightTarget,datum:u,gridIndex:u.gridIndex,series:t.SeriesDataMap.get(u.seriesLabel),seriesIndex:u.seriesIndex,seriesLabel:u.seriesLabel,group:t.GroupDataMap.get(u.groupLabel),groupIndex:u.groupIndex,groupLabel:u.groupLabel,event:d,data:t.computedData})}).on("mouseout",(d,c)=>{const R=c[0]?c[0].seriesLabel:"",{groupIndex:N,groupLabel:B}=t.gridGroupPositionFn(d),u=t.GroupDataMap.get(B).find(_=>_.seriesLabel===R)??c[0];k.next({type:"grid",eventName:"mouseout",pluginName:o,highlightTarget:t.highlightTarget,datum:u,gridIndex:u.gridIndex,series:t.SeriesDataMap.get(u.seriesLabel),seriesIndex:u.seriesIndex,seriesLabel:u.seriesLabel,group:t.GroupDataMap.get(u.groupLabel),groupIndex:u.groupIndex,groupLabel:u.groupLabel,event:d,data:t.computedData})}).on("click",(d,c)=>{const R=c[0]?c[0].seriesLabel:"",{groupIndex:N,groupLabel:B}=t.gridGroupPositionFn(d),u=t.GroupDataMap.get(B).find(_=>_.seriesLabel===R)??c[0];k.next({type:"grid",eventName:"click",pluginName:o,highlightTarget:t.highlightTarget,datum:u,gridIndex:u.gridIndex,series:t.SeriesDataMap.get(u.seriesLabel),seriesIndex:u.seriesIndex,seriesLabel:u.seriesLabel,group:t.GroupDataMap.get(u.groupLabel),groupIndex:u.groupIndex,groupLabel:u.groupLabel,event:d,data:t.computedData})})})}),x.pipe(m(I),Ie(t=>t.highlightTarget==="series"),G(t=>M({graphicGSelection:H,gridHighlight:$,DataMap:oe,fullChartParams:x}).pipe(m(I),G(async y=>y)))).subscribe(t=>{const y=t.gridHighlight[0]?t.gridHighlight[0].seriesLabel:null;Fe({selection:t.graphicGSelection,seriesLabel:y,fullChartParams:t.fullChartParams})}),()=>{I.next(void 0)}},ie="LineAreas",ze={name:ie,defaultParams:me,layerIndex:he,validator:(o,{validateColumns:s})=>s(o,{lineCurve:{toBeTypes:["string"]},linearGradientOpacity:{toBe:"[number, number]",test:r=>Array.isArray(r)&&r.length===2&&typeof r[0]=="number"&&typeof r[1]=="number"}})},it=W(ze)(({selection:o,name:s,observer:e,subject:r})=>{const i=new V,n=Ee(ie,{selection:o,computedData$:e.computedData$,visibleComputedData$:e.visibleComputedData$,computedAxesData$:e.computedAxesData$,visibleComputedAxesData$:e.visibleComputedAxesData$,seriesLabels$:e.seriesLabels$,SeriesDataMap$:e.SeriesDataMap$,GroupDataMap$:e.GroupDataMap$,fullParams$:e.fullParams$,fullDataFormatter$:e.fullDataFormatter$,fullChartParams$:e.fullChartParams$,gridAxesTransform$:e.gridAxesTransform$,gridGraphicTransform$:e.gridGraphicTransform$,gridAxesSize$:e.gridAxesSize$,gridHighlight$:e.gridHighlight$,gridContainerPosition$:e.gridContainerPosition$,allContainerPosition$:e.gridContainerPosition$,layout$:e.layout$,event$:r.event$});return()=>{i.next(void 0),n()}}),ae="Dots",Ne={name:ae,defaultParams:xe,layerIndex:$e,validator:(o,{validateColumns:s})=>s(o,{radius:{toBeTypes:["number"]},fillColorType:{toBeOption:"ColorType"},strokeColorType:{toBeOption:"ColorType"},strokeWidth:{toBeTypes:["number"]},onlyShowHighlighted:{toBeTypes:["boolean"]}})},at=W(Ne)(({selection:o,name:s,subject:e,observer:r})=>{const i=new V,n=Ge(ae,{selection:o,computedData$:r.computedData$,computedAxesData$:r.computedAxesData$,visibleComputedData$:r.visibleComputedData$,visibleComputedAxesData$:r.visibleComputedAxesData$,seriesLabels$:r.seriesLabels$,SeriesDataMap$:r.SeriesDataMap$,GroupDataMap$:r.GroupDataMap$,fullParams$:r.fullParams$,fullChartParams$:r.fullChartParams$,gridAxesTransform$:r.gridAxesTransform$,gridGraphicTransform$:r.gridGraphicTransform$,gridGraphicReverseScale$:r.gridGraphicReverseScale$,gridAxesSize$:r.gridAxesSize$,gridHighlight$:r.gridHighlight$,gridContainerPosition$:r.gridContainerPosition$,event$:e.event$});return()=>{i.next(void 0),n()}}),re="StackedValueAxis",Ve={name:re,defaultParams:fe,layerIndex:ye,validator:(o,{validateColumns:s})=>s(o,{labelOffset:{toBe:"[number, number]",test:r=>Array.isArray(r)&&r.length===2&&typeof r[0]=="number"&&typeof r[1]=="number"},labelColorType:{toBeOption:"ColorType"},axisLineVisible:{toBeTypes:["boolean"]},axisLineColorType:{toBeOption:"ColorType"},ticks:{toBeTypes:["number","null"]},tickFormat:{toBeTypes:["string","Function"]},tickLineVisible:{toBeTypes:["boolean"]},tickPadding:{toBeTypes:["number"]},tickFullLine:{toBeTypes:["boolean"]},tickFullLineDasharray:{toBeTypes:["string"]},tickColorType:{toBeOption:"ColorType"},tickTextRotate:{toBeTypes:["number"]},tickTextColorType:{toBeOption:"ColorType"}})},rt=W(Ve)(({selection:o,name:s,observer:e,subject:r})=>{const i=new V,n=Me(re,{selection:o,computedData$:e.computedStackedData$,filteredMinMaxValue$:e.filteredMinMaxValue$,fullParams$:e.fullParams$,fullDataFormatter$:e.fullDataFormatter$,fullChartParams$:e.fullChartParams$,gridAxesTransform$:e.gridAxesTransform$,gridAxesReverseTransform$:e.gridAxesReverseTransform$,gridAxesSize$:e.gridAxesSize$,gridContainerPosition$:e.gridContainerPosition$,isSeriesSeprate$:e.isSeriesSeprate$});return()=>{i.next(void 0),n()}}),U="GroupAux",K=X(U,"label-box"),ve={name:U,defaultParams:De,layerIndex:Ae,validator:(o,{validateColumns:s})=>s(o,{showLine:{toBeTypes:["boolean"]},showLabel:{toBeTypes:["boolean"]},lineDashArray:{toBeTypes:["string"]},lineColorType:{toBeOption:"ColorType"},labelColorType:{toBeOption:"ColorType"},labelTextColorType:{toBeOption:"ColorType"},labelTextFormat:{toBeTypes:["string","Function"]},labelPadding:{toBeTypes:["number"]},labelRotate:{toBeTypes:["number"]}})};function He({groupLabel:o,axisX:s,axisHeight:e,fullParams:r}){return r.showLine&&o?[{id:o,x1:s,x2:s,y1:0,y2:e}]:[]}function Ue({groupLabel:o,axisX:s,fullParams:e,textSizePx:r,rowAmount:i}){const n=Se(o,e.labelTextFormat),h=n.split(`
`),l=h.reduce((S,x)=>x.length>S.length?x:S,""),p=Re(l,r),g=r*h.length;return e.showLabel&&o?[{id:o,x:s,y:-e.labelPadding*i,text:n,textArr:h,textWidth:p,textHeight:g}]:[]}function Xe({selection:o,pluginName:s,lineData:e,fullParams:r,fullChartParams:i}){const n=X(s,"auxline");return o.selectAll(`line.${n}`).data(e).join(l=>l.append("line").classed(n,!0).style("stroke-width",1).style("pointer-events","none").style("vector-effect","non-scaling-stroke").attr("x1",p=>p.x1).attr("y1",p=>p.y1).attr("x2",p=>p.x2).attr("y2",p=>p.y2),l=>l.transition().duration(50).attr("x1",g=>g.x1).attr("y1",g=>g.y1).attr("x2",g=>g.x2).attr("y2",g=>g.y2),l=>l.remove()).style("stroke",l=>J(r.lineColorType,i)).style("stroke-dasharray",r.lineDashArray??"none")}function We(o){o.selectAll("line").data([]).exit().remove()}function Ye({selection:o,labelData:s,fullParams:e,fullDataFormatter:r,fullChartParams:i,textReverseTransformWithRotate:n,textSizePx:h}){return o.selectAll(`g.${K}`).data(s).join(p=>p.append("g").classed(K,!0).style("cursor","pointer").attr("transform",(g,S)=>`translate(${g.x}, ${g.y})`),p=>p.transition().duration(50).attr("transform",(S,x)=>`translate(${S.x}, ${S.y})`),p=>p.remove()).each((p,g,S)=>{const x=p.textWidth+12,C=p.textHeight+6;let T=-x/2,D=-2;r.groupAxis.position==="bottom"?(T=e.labelRotate?-x+C:-x/2,D=2):r.groupAxis.position==="left"?(T=-x+2,D=-C/2):r.groupAxis.position==="right"?(T=-2,D=-C/2):r.groupAxis.position==="top"&&(T=e.labelRotate?-x+C:-x/2,D=-C+2),F(S[g]).selectAll("rect").data([p]).join($=>$.append("rect").style("cursor","pointer").attr("rx",5).attr("ry",5),$=>$,$=>$.remove()).attr("width",$=>`${x}px`).attr("height",`${C}px`).attr("fill",$=>J(e.labelColorType,i)).attr("x",T).attr("y",D-3).style("transform",n),F(S[g]).selectAll("text").data([p]).join($=>$.append("text").style("dominant-baseline","hanging").style("cursor","pointer"),$=>$,$=>$.remove()).style("transform",n).attr("fill",$=>J(e.labelTextColorType,i)).attr("font-size",i.styles.textSize).attr("x",T+6).attr("y",D).each(($,O,E)=>{Te(F(E[O]),{textArr:p.textArr,textSizePx:h,groupAxisPosition:r.groupAxis.position})})})}function je(o){o.selectAll(`g.${K}`).data([]).exit().remove()}const ot=W(ve)(({selection:o,rootSelection:s,name:e,subject:r,observer:i})=>{const n=new V;let h=!1;const l=s.insert("rect","g").classed(X(U,"rect"),!0).attr("opacity",0),{seriesSelection$:p,axesSelection$:g,defsSelection$:S,graphicGSelection$:x}=te({selection:o,pluginName:U,clipPathID:"test",seriesLabels$:i.isSeriesSeprate$.pipe(G(a=>be(()=>a,i.seriesLabels$,i.seriesLabels$.pipe(A(b=>[b[0]]))))),gridContainerPosition$:i.gridContainerPosition$,gridAxesTransform$:i.gridAxesTransform$,gridGraphicTransform$:i.gridGraphicTransform$});i.layout$.pipe(m(n)).subscribe(a=>{l.attr("width",a.rootWidth).attr("height",a.rootHeight)});const C=M({groupScaleDomainValue:i.groupScaleDomainValue$,gridAxesSize:i.gridAxesSize$}).pipe(m(n),G(async a=>a),A(a=>Pe().domain(a.groupScaleDomainValue).range([0,a.gridAxesSize.width]))),T=i.fullChartParams$.pipe(m(n),A(a=>a.highlightTarget),w()),D=ee(s,"mousemove").pipe(m(n)),$=M({gridAxesReverseTransform:i.gridAxesReverseTransform$,gridContainerPosition:i.gridContainerPosition$}).pipe(m(n),G(async a=>a),A(a=>{const b=`rotateX(${a.gridAxesReverseTransform.rotateX}deg) rotateY(${a.gridAxesReverseTransform.rotateY}deg)`,f=`rotate(${a.gridAxesReverseTransform.rotate}deg)`,P=`scale(${1/a.gridContainerPosition[0].scale[0]}, ${1/a.gridContainerPosition[0].scale[1]})`;return`${b} ${f} ${P}`}),w()),O=M({textReverseTransform:$,fullParams:i.fullParams$}).pipe(m(n),G(async a=>a),A(a=>`${a.textReverseTransform} rotate(${a.fullParams.labelRotate}deg)`)),E=i.gridContainerPosition$.pipe(m(n),A(a=>a.reduce((f,P)=>P.columnIndex>f?P.columnIndex:f,0)+1),w()),k=i.gridContainerPosition$.pipe(m(n),A(a=>a.reduce((f,P)=>P.rowIndex>f?P.rowIndex:f,0)+1),w()),I=Ce({rootSelection:s,fullDataFormatter$:i.fullDataFormatter$,gridAxesSize$:i.gridAxesSize$,computedData$:i.computedData$,fullChartParams$:i.fullChartParams$,gridContainerPosition$:i.gridContainerPosition$,layout$:i.layout$}).pipe(m(n));M({axesSelection:g,columnAmount:E,rowAmount:k,layout:i.layout$,rootMousemove:D,gridGroupPosition:I,computedData:i.computedData$,groupScale:C,gridAxesSize:i.gridAxesSize$,fullParams:i.fullParams$,fullDataFormatter:i.fullDataFormatter$,fullChartParams:i.fullChartParams$,highlightTarget:T,textReverseTransformWithRotate:O,GroupDataMap:i.GroupDataMap$,textSizePx:i.textSizePx$}).pipe(m(n),G(async a=>a)).subscribe(a=>{const{groupIndex:b,groupLabel:f}=a.gridGroupPosition,P=a.groupScale(b)??0,H=He({groupLabel:f,axisX:P,axisHeight:a.gridAxesSize.height,fullParams:a.fullParams});Xe({selection:a.axesSelection,pluginName:e,lineData:H,fullParams:a.fullParams,fullChartParams:a.fullChartParams});const Y=Ue({groupLabel:f,axisX:P,fullParams:a.fullParams,textSizePx:a.textSizePx,rowAmount:a.rowAmount});Ye({selection:a.axesSelection,labelData:Y,fullParams:a.fullParams,fullDataFormatter:a.fullDataFormatter,fullChartParams:a.fullChartParams,textReverseTransformWithRotate:a.textReverseTransformWithRotate,textSizePx:a.textSizePx}).on("mouseover",(L,z)=>{L.stopPropagation(),h=!0,r.event$.next({type:"grid",pluginName:e,eventName:"mouseover",highlightTarget:a.highlightTarget,datum:null,gridIndex:0,series:[],seriesIndex:-1,seriesLabel:"",group:a.GroupDataMap.get(f)??[],groupIndex:b,groupLabel:f,event:L,data:a.computedData})}).on("mousemove",(L,z)=>{L.stopPropagation(),r.event$.next({type:"grid",pluginName:e,eventName:"mousemove",highlightTarget:a.highlightTarget,datum:null,gridIndex:0,series:[],seriesIndex:-1,seriesLabel:"",group:a.GroupDataMap.get(f)??[],groupIndex:b,groupLabel:f,event:L,data:a.computedData})}).on("mouseout",(L,z)=>{L.stopPropagation(),h=!1,r.event$.next({type:"grid",pluginName:e,eventName:"mouseout",highlightTarget:a.highlightTarget,datum:null,gridIndex:0,series:[],seriesIndex:-1,seriesLabel:"",group:a.GroupDataMap.get(f)??[],groupIndex:b,groupLabel:f,event:L,data:a.computedData})}).on("click",(L,z)=>{L.stopPropagation(),r.event$.next({type:"grid",pluginName:e,eventName:"click",highlightTarget:a.highlightTarget,datum:null,gridIndex:0,series:[],seriesIndex:-1,seriesLabel:"",group:a.GroupDataMap.get(f)??[],groupIndex:b,groupLabel:f,event:L,data:a.computedData})})});const v=ee(l,"mouseout").pipe(m(n));return M({rootRectMouseout:v,axesSelection:g}).pipe(m(n),G(async a=>a)).subscribe(a=>{setTimeout(()=>{h!=!0&&(We(a.axesSelection),je(a.axesSelection))})}),()=>{n.next(void 0),l.remove()}});export{at as D,ot as G,it as L,rt as S,Ee as c};
