import{y as m,S as g,t as i,m as n,G as y,aH as b}from"./Dwexfo5s.js";import{c as f}from"./Cngx3B8B.js";const l="GridLegend",R={name:l,defaultParams:y,layerIndex:b,validator:(a,{validateColumns:s})=>s(a,{placement:{toBe:'"top" | "top-start" | "top-end" | "bottom" | "bottom-start" | "bottom-end" | "left" | "left-start" | "left-end" | "right" | "right-start" | "right-end"',test:r=>["top","top-start","top-end","bottom","bottom-start","bottom-end","left","left-start","left-end","right","right-start","right-end"].includes(r)},padding:{toBeTypes:["number"]},backgroundFill:{toBeOption:"ColorType"},backgroundStroke:{toBeOption:"ColorType"},gap:{toBeTypes:["number"]},listRectWidth:{toBeTypes:["number"]},listRectHeight:{toBeTypes:["number"]},listRectRadius:{toBeTypes:["number"]},textColorType:{toBeOption:"ColorType"}})},B=m(R)(({selection:a,rootSelection:s,observer:t,subject:r})=>{const o=new g,p=t.SeriesDataMap$.pipe(i(o),n(e=>Array.from(e.keys()))),u=t.fullParams$.pipe(i(o),n(e=>{const d=[{listRectWidth:e.listRectWidth,listRectHeight:e.listRectHeight,listRectRadius:e.listRectRadius}];return{...e,labelList:d}})),c=f(l,{rootSelection:s,legendLabels$:p,fullParams$:u,layout$:t.layout$,fullChartParams$:t.fullChartParams$,textSizePx$:t.textSizePx$});return()=>{o.next(void 0),c()}});export{B as G};
