import{n as W,o as oa,p as na,q as ca,r as ua,u as ma,v as $a,w as pa,x as M,y as $,z as aa,B as ta,C as N,E as g,F as da,G as ga,H as Da,I as fa,J as ha,K as ba,L as Ga,a as P,M as Aa,S,t as f,m as h,j,i as E,N as La,d as _,c as O,P as Pa,s as x,Q as Sa,R as Ca,T as Fa,g as Ma}from"./hQFDSd1w.js";import{c as xa,g as Ta,a as va,b as ya,d as Ra,e as Ea,s as _a,f as Oa,h as Ua,i as za,j as Ia}from"./C1ZudAwN.js";import{c as Na}from"./D33HThNu.js";import{c as ja}from"./BuJmECfO.js";import{g as T}from"./CrPrLvvz.js";import{c as wa}from"./Dig2-vBK.js";import{c as Ba}from"./CvnMrnyQ.js";import{a as Ha,c as Va}from"./CTQxU0vj.js";const ka=u=>{const{data:l=[],dataFormatter:i,chartParams:r}=u;if(!l.length)return[];let n=[];try{const t=i.gridList[0]||W,d=l.map((s,c)=>i.gridList[c]||t),o=l.map((s,c)=>xa(s,d[c])),a=i.separateGrid?o.map((s,c)=>oa({transposedDataGrid:s,dataFormatterGrid:d[c],chartType:"multiGrid"})):o.map((s,c)=>na({transposedDataGrid:s,dataFormatterGrid:d[c],chartType:"multiGrid",gridIndex:c})),e=new Map;let m=0;a.flat().forEach((s,c)=>{if(!e.has(s)){const p=ca(m,r);e.set(s,p),m++}}),n=o.map((s,c)=>{const p=a[c],b=ua({transposedDataGrid:s,dataFormatterGrid:d[c],chartType:"multiGrid",gridIndex:c});let D=0;return s.map((y,A)=>y.map((G,L)=>{const R=ma("multiGrid",c,A,L),z=b[L],C=p[A],F={id:G.id?G.id:R,index:D,label:G.label?G.label:R,description:G.description??"",data:G.data,value:G.value,gridIndex:c,seriesIndex:A,seriesLabel:C,groupIndex:L,groupLabel:z,color:e.get(C),visible:!0};return F.visible=i.visibleFilter(F,u),D++,F}))})}catch(t){throw Error(t)}return n},Wa=({fullDataFormatter$:u,computedData$:l,layout$:i,fullChartParams$:r,event$:n})=>{const t=new $a,d=pa({datumList$:l.pipe(M(a=>a.flat().flat()),$(1)),fullChartParams$:r,event$:n}).pipe($(1)),o=Xa({computedData$:l,fullDataFormatter$:u,layout$:i}).pipe($(1));return aa({fullDataFormatter:u,computedData:l,multiGridContainer:o}).pipe(ta(async a=>a),M(a=>{t.next(void 0);const e=a.fullDataFormatter.gridList[0]??W;return a.computedData.map((m,s)=>{const c=a.fullDataFormatter.gridList[s]??e,p={type:"grid",visibleFilter:a.fullDataFormatter.visibleFilter,grid:{...c},container:{...a.fullDataFormatter.container}},b=N(p).pipe(g(t),$(1)),D=N(m).pipe(g(t),$(1)),U=b.pipe(M(I=>I.grid.separateSeries),da(),$(1)),y=N(a.multiGridContainer[s]).pipe(g(t),$(1)),A=Ta({fullDataFormatter$:b,layout$:i}).pipe(g(t),$(1)),G=va({gridAxesTransform$:A}).pipe(g(t),$(1)),L=ya({computedData$:D,fullDataFormatter$:b,layout$:i}).pipe(g(t),$(1)),R=Ra({gridContainerPosition$:y,gridAxesTransform$:A,gridGraphicTransform$:L}),z=Ea({fullDataFormatter$:b,layout$:i}).pipe(g(t),$(1)),C=D.pipe(M(I=>I.flat())).pipe(g(t),$(1)),F=_a({computedData$:D}).pipe(g(t),$(1)),ea=ga({datumList$:C}).pipe(g(t),$(1)),ra=Da({datumList$:C}).pipe(g(t),$(1)),ia=Oa({computedData$:D}).pipe(g(t),$(1)),X=Ua({computedData$:D,fullDataFormatter$:b,layout$:i}).pipe(g(t),$(1)),sa=za({computedLayoutData$:X}).pipe(g(t),$(1)),la=Ia({computedData$:D,isSeriesSeprate$:U}).pipe($(1));return{isSeriesSeprate$:U,gridContainerPosition$:y,gridAxesTransform$:A,gridAxesReverseTransform$:G,gridGraphicTransform$:L,gridGraphicReverseScale$:R,gridAxesSize$:z,gridHighlight$:d,seriesLabels$:F,SeriesDataMap$:ea,GroupDataMap$:ra,dataFormatter$:b,computedData$:D,computedLayoutData$:X,visibleComputedData$:ia,visibleComputedLayoutData$:sa,computedStackedData$:la}})}))},Xa=({computedData$:u,fullDataFormatter$:l,layout$:i})=>aa({computedData:u,fullDataFormatter:l,layout:i}).pipe(ta(async r=>r),M(r=>{const n=r.fullDataFormatter.gridList[0]??W,t=r.computedData.reduce((e,m,s)=>{const p=(r.fullDataFormatter.gridList[s]??n).separateSeries?m.length:r.fullDataFormatter.separateGrid?1:0;return e+p},0)||1,d=fa(r.layout,r.fullDataFormatter.container,t);let o=0;return r.computedData.map((e,m)=>{const s=r.fullDataFormatter.gridList[m]??n,c=e.map((p,b)=>{const D=d[o];return s.separateSeries&&(o+=1),D});return!s.separateSeries&&r.fullDataFormatter.separateGrid&&(o+=1),c})})),qa=({subject:u,observer:l})=>{const i=ha(l.fullChartParams$).pipe($(1)),r=Wa({fullDataFormatter$:l.fullDataFormatter$,computedData$:l.computedData$,layout$:l.layout$,fullChartParams$:l.fullChartParams$,event$:u.event$}).pipe($(1));return{fullParams$:l.fullParams$,fullChartParams$:l.fullChartParams$,fullDataFormatter$:l.fullDataFormatter$,computedData$:l.computedData$,layout$:l.layout$,textSizePx$:i,multiGridEachDetail$:r}};class rt extends ba{constructor(l,i){super({defaultDataFormatter:Ga,computedDataFn:ka,contextObserverFn:qa},l,i)}}const q="MultiGridLegend",it=P(q,Aa)(({selection:u,rootSelection:l,observer:i,subject:r})=>{const n=new S,t=i.multiGridEachDetail$.pipe(f(n),h(e=>e.map((s,c)=>s.SeriesDataMap$.pipe(h(p=>Array.from(p.keys()))))),j(e=>E(e)),h(e=>e.flat())),d=E({fullParams:i.fullParams$,computedData:i.computedData$}).pipe(f(n),j(async e=>e),h(e=>e.computedData.map((m,s)=>{const c=La(e.fullParams.gridList[s]??{},{listRectWidth:e.fullParams.listRectWidth,listRectHeight:e.fullParams.listRectHeight,listRectRadius:e.fullParams.listRectRadius});return m.map(p=>c)}).flat())),o=E({fullParams:i.fullParams$,seriesList:d}).pipe(f(n),j(async e=>e),h(e=>({...e.fullParams,seriesList:e.seriesList}))),a=Na(q,{rootSelection:l,seriesLabels$:t,fullParams$:o,layout$:i.layout$,fullChartParams$:i.fullChartParams$,textSizePx$:i.textSizePx$});return()=>{n.next(void 0),a()}}),v=u=>{const l=u.fullParams$.pipe(h(i=>i.gridIndexes),_(),O(1));return E({multiGridEachDetail:u.multiGridEachDetail$,gridIndexes:l}).pipe(h(i=>i.gridIndexes.map(r=>i.multiGridEachDetail[r]??i.multiGridEachDetail[0])))},w="MultiBars",J=T(w,"grid"),st=P(w,Pa)(({selection:u,name:l,subject:i,observer:r})=>{const n=new S,t=[];return v(r).pipe(f(n)).subscribe(o=>{t.forEach(a=>a()),u.selectAll(`g.${J}`).data(o).join("g").attr("class",J).each((a,e,m)=>{const s=x(m[e]),c=a.dataFormatter$.pipe(f(n),h(p=>p.grid.separateSeries),_(),O(1));t[e]=ja(w,{selection:s,computedData$:a.computedData$,visibleComputedData$:a.visibleComputedData$,computedLayoutData$:a.computedLayoutData$,visibleComputedLayoutData$:a.visibleComputedLayoutData$,seriesLabels$:a.seriesLabels$,SeriesDataMap$:a.SeriesDataMap$,GroupDataMap$:a.GroupDataMap$,fullParams$:r.fullParams$,fullChartParams$:r.fullChartParams$,gridAxesTransform$:a.gridAxesTransform$,gridGraphicTransform$:a.gridGraphicTransform$,gridGraphicReverseScale$:a.gridGraphicReverseScale$,gridAxesSize$:a.gridAxesSize$,gridHighlight$:a.gridHighlight$,gridContainerPosition$:a.gridContainerPosition$,isSeriesSeprate$:c,event$:i.event$})})}),()=>{n.next(void 0),t.forEach(o=>o())}}),B="MultiLines",K=T(B,"grid"),lt=P(B,Sa)(({selection:u,name:l,subject:i,observer:r})=>{const n=new S,t=[];return v(r).pipe(f(n)).subscribe(o=>{t.forEach(a=>a()),u.selectAll(`g.${K}`).data(o).join("g").attr("class",K).each((a,e,m)=>{const s=x(m[e]);t[e]=wa(B,{selection:s,computedData$:a.computedData$,computedLayoutData$:a.computedLayoutData$,visibleComputedData$:a.visibleComputedData$,visibleComputedLayoutData$:a.visibleComputedLayoutData$,seriesLabels$:a.seriesLabels$,SeriesDataMap$:a.SeriesDataMap$,GroupDataMap$:a.GroupDataMap$,fullDataFormatter$:a.dataFormatter$,fullParams$:r.fullParams$,fullChartParams$:r.fullChartParams$,gridAxesTransform$:a.gridAxesTransform$,gridGraphicTransform$:a.gridGraphicTransform$,gridAxesSize$:a.gridAxesSize$,gridHighlight$:a.gridHighlight$,gridContainerPosition$:a.gridContainerPosition$,event$:i.event$})})}),()=>{n.next(void 0),t.forEach(o=>o())}}),H="MultiDots",Q=T(H,"grid"),ot=P(H,Ca)(({selection:u,name:l,subject:i,observer:r})=>{const n=new S,t=[];return v(r).pipe(f(n)).subscribe(o=>{t.forEach(a=>a()),u.selectAll(`g.${Q}`).data(o).join("g").attr("class",Q).each((a,e,m)=>{const s=x(m[e]);t[e]=Ba(H,{selection:s,computedData$:a.computedData$,visibleComputedData$:a.visibleComputedData$,computedLayoutData$:a.computedLayoutData$,visibleComputedLayoutData$:a.visibleComputedLayoutData$,seriesLabels$:a.seriesLabels$,SeriesDataMap$:a.SeriesDataMap$,GroupDataMap$:a.GroupDataMap$,fullParams$:r.fullParams$,fullChartParams$:r.fullChartParams$,gridAxesTransform$:a.gridAxesTransform$,gridGraphicTransform$:a.gridGraphicTransform$,gridGraphicReverseScale$:a.gridGraphicReverseScale$,gridAxesSize$:a.gridAxesSize$,gridHighlight$:a.gridHighlight$,gridContainerPosition$:a.gridContainerPosition$,event$:i.event$})})}),()=>{n.next(void 0),t.forEach(o=>o())}}),V="MultiGroupAxis",Y=T(V,"grid"),nt=P(V,Fa)(({selection:u,name:l,subject:i,observer:r})=>{const n=new S,t=[];return v(r).pipe(f(n)).subscribe(o=>{t.forEach(a=>a()),u.selectAll(`g.${Y}`).data(o).join("g").attr("class",Y).each((a,e,m)=>{const s=x(m[e]),c=a.dataFormatter$.pipe(f(n),h(p=>p.grid.separateSeries),_(),O(1));t[e]=Ha(V,{selection:s,computedData$:a.computedData$,fullParams$:r.fullParams$,fullDataFormatter$:a.dataFormatter$,fullChartParams$:r.fullChartParams$,gridAxesTransform$:a.gridAxesTransform$,gridAxesReverseTransform$:a.gridAxesReverseTransform$,gridAxesSize$:a.gridAxesSize$,gridContainerPosition$:a.gridContainerPosition$,isSeriesSeprate$:c})})}),()=>{n.next(void 0),t.forEach(o=>o())}}),k="MultiValueAxis",Z=T(k,"grid"),ct=P(k,Ma)(({selection:u,name:l,subject:i,observer:r})=>{const n=new S,t=[];return v(r).pipe(f(n)).subscribe(o=>{t.forEach(a=>a()),u.selectAll(`g.${Z}`).data(o).join("g").attr("class",Z).each((a,e,m)=>{const s=x(m[e]),c=a.dataFormatter$.pipe(f(n),h(p=>p.grid.separateSeries),_(),O(1));t[e]=Va(k,{selection:s,computedData$:a.computedData$,fullParams$:r.fullParams$,fullDataFormatter$:a.dataFormatter$,fullChartParams$:r.fullChartParams$,gridAxesTransform$:a.gridAxesTransform$,gridAxesReverseTransform$:a.gridAxesReverseTransform$,gridAxesSize$:a.gridAxesSize$,gridContainerPosition$:a.gridContainerPosition$,isSeriesSeprate$:c})})}),()=>{n.next(void 0),t.forEach(o=>o())}}),ut=[[[1205,850,930,1111,1500],[735,900,880,1035,1120]],[[55,60,50,70,75],[35,40,45,65,80]]];export{rt as M,nt as a,ct as b,st as c,it as d,ut as e,lt as f,ot as g,v as m};
