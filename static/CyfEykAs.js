import{b as M,d as z,e as j,s as H,f as V,c as q,S as B,h as I,m as C,i as e,j as R,k as _,o as y,t as n,l as J,n as K,p as N,q as Q,r as W,A as X,u as Y}from"./DimhisTc.js";import{a as Z,g as tt,b as at,d as et,e as rt,f as it,s as st,h as ot,i as lt,j as nt,k as ct}from"./d4Vqhbx6.js";const pt=p=>{const{data:t=[],dataFormatter:o,chartParams:s}=p;if(!t.length)return[];let G=[];try{const a=o.gridList[0]||M,b=t.map((r,i)=>o.gridList[i]||a),d=t.map((r,i)=>Z(r,b[i])),l=o.separateGrid?d.map((r,i)=>z({transposedDataGrid:r,dataFormatterGrid:b[i],chartType:"multiGrid"})):d.map((r,i)=>j({transposedDataGrid:r,dataFormatterGrid:b[i],chartType:"multiGrid",gridIndex:i})),u=new Map;let f=0;l.flat().forEach((r,i)=>{if(!u.has(r)){const $=H(f,s);u.set(r,$),f++}}),G=d.map((r,i)=>{const $=l[i],m=V({transposedDataGrid:r,dataFormatterGrid:b[i],chartType:"multiGrid",gridIndex:i});let c=0;return r.map((v,g)=>v.map((D,F)=>{const S=q("multiGrid",i,g,F),O=m[F],h=$[g],L={id:D.id?D.id:S,index:c,label:D.label?D.label:S,description:D.description??"",data:D.data,value:D.value,gridIndex:i,seriesIndex:g,seriesLabel:h,groupIndex:F,groupLabel:O,color:u.get(h),visible:!0};return L.visible=o.visibleFilter(L,p),c++,L}))})}catch(a){throw Error(a)}return G},dt=({fullDataFormatter$:p,computedData$:t,layout$:o,fullChartParams$:s,event$:G})=>{const a=new B,b=I({datumList$:t.pipe(C(l=>l.flat().flat()),e(1)),fullChartParams$:s,event$:G}).pipe(e(1)),d=ut({computedData$:t,fullDataFormatter$:p,layout$:o}).pipe(e(1));return R({fullDataFormatter:p,computedData:t,multiGridContainer:d}).pipe(_(async l=>l),C(l=>{a.next(void 0);const u=l.fullDataFormatter.gridList[0]??M;return l.computedData.map((f,r)=>{const i=l.fullDataFormatter.gridList[r]??u,$={type:"grid",visibleFilter:l.fullDataFormatter.visibleFilter,grid:{...i},container:{...l.fullDataFormatter.container}},m=y($).pipe(n(a),e(1)),c=y(f).pipe(n(a),e(1)),A=m.pipe(C(T=>T.grid.separateSeries),J(),e(1)),v=y(l.multiGridContainer[r]).pipe(n(a),e(1)),g=tt({fullDataFormatter$:m,layout$:o}).pipe(n(a),e(1)),D=at({gridAxesTransform$:g}).pipe(n(a),e(1)),F=et({computedData$:c,fullDataFormatter$:m,layout$:o}).pipe(n(a),e(1)),S=rt({gridContainerPosition$:v,gridAxesTransform$:g,gridGraphicTransform$:F}),O=it({fullDataFormatter$:m,layout$:o}).pipe(n(a),e(1)),h=c.pipe(C(T=>T.flat())).pipe(n(a),e(1)),L=st({computedData$:c}).pipe(n(a),e(1)),x=K({datumList$:h}).pipe(n(a),e(1)),E=N({datumList$:h}).pipe(n(a),e(1)),U=ot({computedData$:c}).pipe(n(a),e(1)),P=lt({computedData$:c,fullDataFormatter$:m,layout$:o}).pipe(n(a),e(1)),k=nt({computedLayoutData$:P}).pipe(n(a),e(1)),w=ct({computedData$:c,isSeriesSeprate$:A}).pipe(e(1));return{isSeriesSeprate$:A,gridContainerPosition$:v,gridAxesTransform$:g,gridAxesReverseTransform$:D,gridGraphicTransform$:F,gridGraphicReverseScale$:S,gridAxesSize$:O,gridHighlight$:b,seriesLabels$:L,SeriesDataMap$:x,GroupDataMap$:E,dataFormatter$:m,computedData$:c,computedLayoutData$:P,visibleComputedData$:U,visibleComputedLayoutData$:k,computedStackedData$:w}})}))},ut=({computedData$:p,fullDataFormatter$:t,layout$:o})=>R({computedData:p,fullDataFormatter:t,layout:o}).pipe(_(async s=>s),C(s=>{const G=s.fullDataFormatter.gridList[0]??M,a=s.computedData.reduce((u,f,r)=>{const $=(s.fullDataFormatter.gridList[r]??G).separateSeries?f.length:s.fullDataFormatter.separateGrid?1:0;return u+$},0)||1,b=Q(s.layout,s.fullDataFormatter.container,a);let d=0;return s.computedData.map((u,f)=>{const r=s.fullDataFormatter.gridList[f]??G,i=u.map(($,m)=>{const c=b[d];return r.separateSeries&&(d+=1),c});return!r.separateSeries&&s.fullDataFormatter.separateGrid&&(d+=1),i})})),mt=({subject:p,observer:t})=>{const o=W(t.fullChartParams$).pipe(e(1)),s=dt({fullDataFormatter$:t.fullDataFormatter$,computedData$:t.computedData$,layout$:t.layout$,fullChartParams$:t.fullChartParams$,event$:p.event$}).pipe(e(1));return{fullParams$:t.fullParams$,fullChartParams$:t.fullChartParams$,fullDataFormatter$:t.fullDataFormatter$,computedData$:t.computedData$,layout$:t.layout$,textSizePx$:o,multiGridEachDetail$:s}};class ft extends X{constructor(t,o){super({defaultDataFormatter:Y,computedDataFn:pt,contextObserverFn:mt},t,o)}}export{ft as M};
