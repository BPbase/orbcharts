import{at as l,aL as M,aB as o,aE as f,aH as V,aM as k,aN as z,aI as I,aJ as E,aO as w,bq as N,B as u,S as p,D as U,L as j,H,i as A,ai as X,F as Y,as as q}from"./CUAujy1K.js";import{u as J,g as W,d as K,e as Q,h as Z,f as v,i as tt,j as at,k as et,l as rt,m as ot,n as st,o as it,p as nt,v as lt,c as ut,q as pt,a as mt}from"./CvNJ1Mhf.js";import{c as $t}from"./BWBub9Md.js";const ct=r=>{const a=l(r,{visibleFilter:{toBeTypes:["Function"]},container:{toBeTypes:["object"]},seriesDirection:{toBe:'"row" | "column"',test:e=>e==="row"||e==="column"},rowLabels:{toBeTypes:["string[]"]},columnLabels:{toBeTypes:["string[]"]},valueAxis:{toBeTypes:["object"]},groupAxis:{toBeTypes:["object"]},separateSeries:{toBeTypes:["boolean"]}});if(a.status==="error")return a;if(r.valueAxis){const e=l(r.valueAxis,{position:{toBe:'"bottom" | "left" | "top" | "right"',test:t=>t==="bottom"||t==="left"||t==="top"||t==="right"},scaleDomain:{toBe:'[number | "min" | "auto", number | "max" | "auto"]',test:t=>Array.isArray(t)&&t.length===2&&(typeof t[0]=="number"||t[0]==="min"||t[0]==="auto")&&(typeof t[1]=="number"||t[1]==="max"||t[1]==="auto")},scaleRange:{toBe:"[number, number]",test:t=>Array.isArray(t)&&t.length===2&&typeof t[0]=="number"&&typeof t[1]=="number"},label:{toBeTypes:["string"]}});if(e.status==="error")return e}if(r.groupAxis){const e=l(r.groupAxis,{position:{toBe:'"bottom" | "left" | "top" | "right"',test:t=>t==="bottom"||t==="left"||t==="top"||t==="right"},scaleDomain:{toBe:'[number, number | "max"]',test:t=>Array.isArray(t)&&t.length===2&&typeof t[0]=="number"&&(typeof t[1]=="number"||t[1]==="max")},scalePadding:{toBeTypes:["number"]},label:{toBeTypes:["string"]}});if(e.status==="error")return e}if(r.container){const e=l(r.container,{columnAmount:{toBeTypes:["number"]},rowAmount:{toBeTypes:["number"]},columnGap:{toBe:'"auto" | number',test:t=>t==="auto"||typeof t=="number"},rowGap:{toBe:'"auto" | number',test:t=>t==="auto"||typeof t=="number"}});if(e.status==="error")return e}return a},dt=r=>l({data:r},{data:{toBe:"(DataGridDatum | DataGridValue)[][]",test:e=>Array.isArray(e)}}),ft=({subject:r,observer:a})=>{const e=M(a.fullChartParams$).pipe(o(1)),t=a.fullDataFormatter$.pipe(f(n=>n.separateSeries),V(),o(1)),s=J({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(o(1)),i=k({layout$:a.layout$,containerPosition$:s,container$:a.fullDataFormatter$.pipe(f(n=>n.container))}).pipe(o(1)),m=W({fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(o(1)),C=K({fullDataFormatter$:a.fullDataFormatter$,containerSize$:i}).pipe(o(1)),$=a.computedData$.pipe(f(n=>n.flat())).pipe(o(1)),S=z({datumList$:$,fullChartParams$:a.fullChartParams$,event$:r.event$}).pipe(o(1)),P=Q({computedData$:a.computedData$}),h=I({datumList$:$}).pipe(o(1)),O=E({datumList$:$}).pipe(o(1)),y=Z({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(o(1)),F=v({computedData$:a.computedData$}).pipe(o(1)),R=tt({computedAxesData$:y}).pipe(o(1)),G=at({computedData$:a.computedData$,isSeriesSeprate$:t}).pipe(o(1)),c=et({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$}).pipe(o(1)),g=rt({computedData$:a.computedData$,groupScaleDomainValue$:c}).pipe(o(1)),d=ot({fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(o(1)),L=st({gridAxesTransform$:d}).pipe(o(1)),D=it({computedData$:a.computedData$,groupScaleDomainValue$:c,filteredMinMaxValue$:g,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(o(1)),_=nt({gridContainerPosition$:s,gridAxesTransform$:d,gridGraphicTransform$:D}).pipe(o(1));return{fullParams$:a.fullParams$,fullChartParams$:a.fullChartParams$,fullDataFormatter$:a.fullDataFormatter$,computedData$:a.computedData$,layout$:a.layout$,textSizePx$:e,isSeriesSeprate$:t,gridContainerPosition$:s,containerSize$:i,gridAxesSize$:m,gridAxesContainerSize$:C,gridHighlight$:S,seriesLabels$:P,SeriesDataMap$:h,GroupDataMap$:O,computedAxesData$:y,visibleComputedData$:F,visibleComputedAxesData$:R,computedStackedData$:G,groupScaleDomainValue$:c,filteredMinMaxValue$:g,gridAxesTransform$:d,gridAxesReverseTransform$:L,gridGraphicTransform$:D,gridGraphicReverseScale$:_}};class Bt extends w{constructor(a,e){super({defaultDataFormatter:N,dataFormatterValidator:ct,computedDataFn:lt,dataValidator:dt,contextObserverCallback:ft},a,e)}}const x="Bars",yt={name:x,defaultParams:U,layerIndex:j,validator:(r,{validateColumns:a})=>a(r,{barWidth:{toBeTypes:["number"]},barPadding:{toBeTypes:["number"]},barGroupPadding:{toBeTypes:["number"]},barRadius:{toBeTypes:["number","boolean"]}})},Ct=u(yt)(({selection:r,name:a,subject:e,observer:t})=>{const s=new p,i=ut(x,{selection:r,computedData$:t.computedData$,computedAxesData$:t.computedAxesData$,visibleComputedData$:t.visibleComputedData$,visibleComputedAxesData$:t.visibleComputedAxesData$,seriesLabels$:t.seriesLabels$,SeriesDataMap$:t.SeriesDataMap$,GroupDataMap$:t.GroupDataMap$,fullParams$:t.fullParams$,fullChartParams$:t.fullChartParams$,gridAxesTransform$:t.gridAxesTransform$,gridGraphicTransform$:t.gridGraphicTransform$,gridGraphicReverseScale$:t.gridGraphicReverseScale$,gridAxesSize$:t.gridAxesSize$,gridHighlight$:t.gridHighlight$,gridContainerPosition$:t.gridContainerPosition$,isSeriesSeprate$:t.isSeriesSeprate$,event$:e.event$});return()=>{s.next(void 0),i()}}),T="GroupAxis",gt={name:T,defaultParams:H,layerIndex:A,validator:(r,{validateColumns:a})=>a(r,{labelOffset:{toBe:"[number, number]",test:t=>Array.isArray(t)&&t.length===2&&typeof t[0]=="number"&&typeof t[1]=="number"},labelColorType:{toBeOption:"ColorType"},axisLineVisible:{toBeTypes:["boolean"]},axisLineColorType:{toBeOption:"ColorType"},ticks:{toBe:'number | null | "all"',test:t=>t===null||t==="all"||typeof t=="number"}})},St=u(gt)(({selection:r,name:a,observer:e,subject:t})=>{const s=new p,i=pt(T,{selection:r,computedData$:e.computedData$,fullParams$:e.fullParams$,fullDataFormatter$:e.fullDataFormatter$,fullChartParams$:e.fullChartParams$,gridAxesTransform$:e.gridAxesTransform$,gridAxesReverseTransform$:e.gridAxesReverseTransform$,gridAxesSize$:e.gridAxesSize$,gridContainerPosition$:e.gridContainerPosition$,isSeriesSeprate$:e.isSeriesSeprate$,textSizePx$:e.textSizePx$});return()=>{s.next(void 0),i()}}),b="ValueAxis",Dt={name:b,defaultParams:X,layerIndex:A,validator:(r,{validateColumns:a})=>a(r,{labelOffset:{toBe:"[number, number]",test:t=>Array.isArray(t)&&t.length===2&&typeof t[0]=="number"&&typeof t[1]=="number"},labelColorType:{toBeOption:"ColorType"},axisLineVisible:{toBeTypes:["boolean"]},axisLineColorType:{toBeOption:"ColorType"},ticks:{toBeTypes:["number","null"]},tickFormat:{toBeTypes:["string","Function"]},tickLineVisible:{toBeTypes:["boolean"]},tickPadding:{toBeTypes:["number"]},tickFullLine:{toBeTypes:["boolean"]},tickFullLineDasharray:{toBeTypes:["string"]},tickColorType:{toBeOption:"ColorType"},tickTextRotate:{toBeTypes:["number"]},tickTextColorType:{toBeOption:"ColorType"}})},Pt=u(Dt)(({selection:r,name:a,observer:e,subject:t})=>{const s=new p,i=mt(b,{selection:r,computedData$:e.computedData$,filteredMinMaxValue$:e.filteredMinMaxValue$,fullParams$:e.fullParams$,fullDataFormatter$:e.fullDataFormatter$,fullChartParams$:e.fullChartParams$,gridAxesTransform$:e.gridAxesTransform$,gridAxesReverseTransform$:e.gridAxesReverseTransform$,gridAxesSize$:e.gridAxesSize$,gridContainerPosition$:e.gridContainerPosition$,isSeriesSeprate$:e.isSeriesSeprate$});return()=>{s.next(void 0),i()}}),B="GridTooltip",At={name:B,defaultParams:Y,layerIndex:q,validator:(r,{validateColumns:a})=>a(r,{backgroundColorType:{toBeOption:"ColorType"},backgroundOpacity:{toBeTypes:["number"]},strokeColorType:{toBeOption:"ColorType"},offset:{toBe:"[number, number]",test:t=>Array.isArray(t)&&t.length===2&&typeof t[0]=="number"&&typeof t[1]=="number"},padding:{toBeTypes:["number"]},textColorType:{toBeOption:"ColorType"},renderFn:{toBeTypes:["Function"]}})},ht=u(At)(({selection:r,rootSelection:a,name:e,subject:t,observer:s})=>{const i=new p,m=$t(B,{rootSelection:a,fullParams$:s.fullParams$,fullChartParams$:s.fullChartParams$,layout$:s.layout$,event$:t.event$});return()=>{i.next(void 0),m()}});export{Ct as B,ht as G,Pt as V,St as a,Bt as b};
