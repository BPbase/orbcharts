import{u as I}from"./CWBAyBLC.js";import{s as F}from"./08ME7XgU.js";import"./DimhisTc.js";import{M as G}from"./CyfEykAs.js";import{S as D,O as P,c as A,t as $,b,m as p,e as v,f as T,s as M}from"./Bj-Bl9V3.js";import{m as S,M as C,a as _,b as R,c as y,d as O,e as X}from"./BtYfUgpi.js";import{c as k}from"./CrfW9Y0_.js";import{g as V}from"./wVpfmAyl.js";import{o as E}from"./ZxgOq4P4.js";import Y from"./lpif6x3Y.js";import{e as j,f as B,g as N,o as U,c as q}from"./D8ccWnmM.js";import"./d4Vqhbx6.js";import"./C6aT9cyB.js";import"./Dq5DcDzY.js";import"./0m8K1IFj.js";import"./nEOVXsd6.js";import"./CLcyYSDM.js";import"./B2yEHQn8.js";function z(d){let u=Math.floor(Math.sqrt(d)),c=Math.ceil(d/u);for(;u*c<d;)c++;return{rowAmount:u,columnAmount:c}}function w(d,u,c){const{gap:e}=u,{rowAmount:o,columnAmount:r}=u.rowAmount*u.columnAmount>=c?u:z(c);return new Array(c).fill(null).map((m,l)=>{const i=l%r,s=Math.floor(l/r),a=(d.width-e*(r-1))/r,t=(d.height-e*(o-1))/o,n=i*a+i*e,g=s*t+s*e,x=[n,g],f=[a/d.width,t/d.height];return{slotIndex:l,rowIndex:s,columnIndex:i,translate:x,scale:f}})}const H=({fullDataFormatter$:d,layout$:u})=>{const c=new D;function e({xAxis:o,yAxis:r,width:m,height:l}){if(!o||!r)return{translate:[0,0],scale:[1,1],rotate:0,rotateX:0,rotateY:0,value:""};let i=0,s=0,a=0,t=0,n=0;return o.position==="bottom"?r.position==="left"?(t=180,s=l):r.position==="right"?(t=180,n=180,i=m,s=l):(t=180,s=l):o.position==="top"?r.position==="left"||(r.position==="right"?(n=180,i=m):(t=180,s=l)):o.position==="left"?r.position==="bottom"?(a=-90,s=l):r.position==="top"?(a=-90,n=180):(t=180,s=l):o.position==="right"?r.position==="bottom"?(a=-90,t=180,s=l,i=m):r.position==="top"?(a=-90,t=180,n=180,i=m):(t=180,s=l):(t=180,s=l),{translate:[i,s],scale:[1,1],rotate:a,rotateX:t,rotateY:n,value:`translate(${i}px, ${s}px) rotate(${a}deg) rotateX(${t}deg) rotateY(${n}deg)`}}return new P(o=>(A({fullDataFormatter:d,layout:u}).pipe($(c),b(async r=>r)).subscribe(r=>{const m=e({xAxis:r.fullDataFormatter.grid.groupAxis,yAxis:r.fullDataFormatter.grid.valueAxis,width:r.layout.width,height:r.layout.height});o.next(m)}),function(){c.next(void 0)}))},J=({gridAxesTransform$:d})=>d.pipe(p(u=>{const c=[0,0],e=[1/u.scale[0],1/u.scale[1]],o=u.rotate*-1,r=u.rotateX*-1,m=u.rotateY*-1;return{translate:c,scale:e,rotate:o,rotateX:r,rotateY:m,value:`translate(${c[0]}px, ${c[1]}px) rotate(${o}deg) rotateX(${r}deg) rotateY(${m}deg)`}})),K=({computedData$:d,fullDataFormatter$:u,layout$:c})=>A({computedData:d,fullDataFormatter:u,layout:c}).pipe(b(async o=>o),p(o=>{if(o.fullDataFormatter.grid.separateSeries)return w(o.layout,o.fullDataFormatter.container,o.computedData.length);{const r=w(o.layout,o.fullDataFormatter.container,1);return o.computedData.map((m,l)=>r[0])}})),L="OverlappingValueAxes",h=V(L,"grid"),Q=v(L,T)(({selection:d,name:u,subject:c,observer:e})=>{const o=new D,r=[],m=e.fullParams$.pipe($(o),p(a=>a.gridIndexes[0])),l=e.fullParams$.pipe($(o),p(a=>a.gridIndexes[1])),i=A({firstGridIndex:m,secondGridIndex:l,fullDataFormatter:e.fullDataFormatter$}).pipe($(o),b(async a=>a),p(a=>{a.fullDataFormatter.gridList[a.secondGridIndex]||(a.fullDataFormatter.gridList[a.secondGridIndex]=Object.assign({},a.fullDataFormatter.gridList[a.firstGridIndex]));const t=a.fullDataFormatter.gridList[a.firstGridIndex].valueAxis.position;let n=t;return t==="left"?n="right":t==="bottom"?n="top":t==="top"?n="bottom":t==="right"&&(n="left"),{type:"grid",visibleFilter:a.fullDataFormatter.visibleFilter,grid:{...a.fullDataFormatter.gridList[a.secondGridIndex],valueAxis:{...a.fullDataFormatter.gridList[a.secondGridIndex].valueAxis,position:n}},container:{...a.fullDataFormatter.container}}}));return E(e).pipe($(o),p(a=>({...a,fullParams$:a.fullParams$.pipe(p(t=>(t.gridIndexes.length>2&&(t.gridIndexes.length=2),t)))})),b(a=>S(a)),p(a=>a.map((t,n)=>{if(n===0)return t;const g=H({fullDataFormatter$:i,layout$:e.layout$}),x=J({gridAxesTransform$:g}),f=K({computedData$:t.computedData$,fullDataFormatter$:i,layout$:e.layout$});return{...t,gridAxesTransform$:g,gridAxesReverseTransform$:x,gridContainerPosition$:f}}))).pipe($(o)).subscribe(a=>{r.forEach(t=>t()),d.selectAll(`g.${h}`).data(a).join("g").attr("class",h).each((t,n,g)=>{if(n>1)return;const x=M(g[n]);r[n]=k(L,{selection:x,computedData$:t.computedData$,fullParams$:e.fullParams$.pipe(p(f=>n===0?f.firstAxis:f.secondAxis)),fullDataFormatter$:t.dataFormatter$,fullChartParams$:e.fullChartParams$,gridAxesTransform$:t.gridAxesTransform$,gridAxesReverseTransform$:t.gridAxesReverseTransform$,gridAxesSize$:t.gridAxesSize$,gridContainerPosition$:t.gridContainerPosition$,isSeriesSeprate$:t.isSeriesSeprate$})})}),()=>{o.next(void 0),r.forEach(a=>a())}}),W={id:"chart",style:{width:"100%",height:"100%"}},$t=j({__name:"index",setup(d){I({title:"Demo 2"});let u;return B(()=>{const c=document.querySelector("#chart"),e=new G(c,{}),o=new C,r=new _,m=new R,l=new y,i=new O,s=new X,a=new Q;e.chartParams$.next({padding:{bottom:120},highlightTarget:"series"}),e.plugins$.next([i,s,o,r,m,l]),e.dataFormatter$.next({container:{rowAmount:1,columnAmount:1},gridList:[{rowLabels:["收入","支出"],columnLabels:["1月","2月","3月","4月","5月"]},{rowLabels:["午餐來客數","晚餐來客數"],columnLabels:["1月","2月","3月","4月","5月"]}]}),i.params$.next({gridIndexes:[0,1]}),s.params$.next({gridIndexes:[0,1]});let t=0,n=0;const g=8,x=1;u=F(()=>{t==0?(e.chartParams$.next({padding:{bottom:120},highlightTarget:"series"}),e.plugins$.next([i,s,o,r,m,l]),e.dataFormatter$.next({container:{rowAmount:1,columnAmount:2},gridList:[{rowLabels:["收入","支出"],columnLabels:["1月","2月","3月","4月","5月"]},{rowLabels:["午餐來客數","晚餐來客數"],columnLabels:["1月","2月","3月","4月","5月"]}],separateGrid:!0}),i.params$.next({gridIndexes:[0,1]}),s.params$.next({gridIndexes:[0,1]})):t==1?(e.chartParams$.next({padding:{bottom:120},highlightTarget:"series"}),e.plugins$.next([i,s,o,r,m,l]),e.dataFormatter$.next({gridList:[{rowLabels:["收入","支出"],columnLabels:["1月","2月","3月","4月","5月"],separateSeries:!0},{rowLabels:["午餐來客數","晚餐來客數"],columnLabels:["1月","2月","3月","4月","5月"]}],separateGrid:!0}),i.params$.next({gridIndexes:[0,1]}),s.params$.next({gridIndexes:[0,1]})):t==2?(e.chartParams$.next({padding:{bottom:120},highlightTarget:"series"}),e.plugins$.next([i,s,o,r,m,l]),e.dataFormatter$.next({container:{rowAmount:2,columnAmount:2},gridList:[{rowLabels:["收入","支出"],columnLabels:["1月","2月","3月","4月","5月"],separateSeries:!0},{rowLabels:["午餐來客數","晚餐來客數"],columnLabels:["1月","2月","3月","4月","5月"],separateSeries:!0}]}),i.params$.next({gridIndexes:[0,1]}),s.params$.next({gridIndexes:[0,1]})):t==3?(e.chartParams$.next({padding:{bottom:120},highlightTarget:"series"}),e.plugins$.next([i,s,o,r,m,l]),e.dataFormatter$.next({container:{rowAmount:2,columnAmount:1},gridList:[{rowLabels:["收入","支出"],columnLabels:["1月","2月","3月","4月","5月"]},{rowLabels:["午餐來客數","晚餐來客數"],columnLabels:["1月","2月","3月","4月","5月"]}],separateGrid:!0}),i.params$.next({gridIndexes:[0,1],tickTextRotate:0}),s.params$.next({gridIndexes:[0,1]})):t==4?(e.plugins$.next([i,s,o,r,m,l]),e.dataFormatter$.next({container:{rowAmount:2,columnAmount:3},gridList:[{seriesDirection:"column",rowLabels:["收入","支出"],columnLabels:["1月","2月","3月","4月","5月"],separateSeries:!0},{seriesDirection:"column",rowLabels:["午餐來客數","晚餐來客數"],columnLabels:["1月","2月","3月","4月","5月"]}],separateGrid:!0}),i.params$.next({gridIndexes:[0,1],tickTextRotate:0}),s.params$.next({gridIndexes:[0,1]})):t==5?(e.chartParams$.next({padding:{left:60,bottom:120}}),e.dataFormatter$.next({container:{rowAmount:2,columnAmount:3,gap:120},gridList:[{seriesDirection:"column",rowLabels:["收入","支出"],columnLabels:["1月","2月","3月","4月","5月"],separateSeries:!0,groupAxis:{position:"left"},valueAxis:{position:"bottom"}},{seriesDirection:"column",rowLabels:["午餐來客數","晚餐來客數"],columnLabels:["1月","2月","3月","4月","5月"],groupAxis:{position:"left"},valueAxis:{position:"bottom"}}],separateGrid:!0}),i.params$.next({gridIndexes:[0,1],tickTextRotate:0}),s.params$.next({gridIndexes:[0,1]})):t==6?(e.plugins$.next([i,s,o,r,m,l]),e.chartParams$.next({padding:{left:60,bottom:120}}),e.dataFormatter$.next({container:{rowAmount:1,columnAmount:2},gridList:[{seriesDirection:"column",rowLabels:["收入","支出"],columnLabels:["1月","2月","3月","4月","5月"],groupAxis:{position:"left"},valueAxis:{position:"bottom"}},{seriesDirection:"column",rowLabels:["午餐來客數","晚餐來客數"],columnLabels:["1月","2月","3月","4月","5月"]}],separateGrid:!0}),i.params$.next({gridIndexes:[0,1],tickTextRotate:0}),s.params$.next({gridIndexes:[0,1]})):t==7?(e.plugins$.next([i,s,o,r,m,l]),e.chartParams$.next({padding:{left:60,bottom:120}}),e.dataFormatter$.next({container:{rowAmount:1,columnAmount:2},gridList:[{seriesDirection:"column",rowLabels:["收入","支出"],columnLabels:["1月","2月","3月","4月","5月"],groupAxis:{position:"left"},valueAxis:{position:"bottom"}},{seriesDirection:"column",rowLabels:["午餐來客數","晚餐來客數"],columnLabels:["1月","2月","3月","4月","5月"]}],separateGrid:!0}),i.params$.next({gridIndexes:[0,1],tickTextRotate:0}),s.params$.next({gridIndexes:[0,1]}),n==0?(o.params$.next({barRadius:!0}),r.params$.next({lineCurve:"curveMonotoneX"})):n==1&&(o.params$.next({}),r.params$.next({})),n++,n>x&&(n=0)):t==8&&(e.plugins$.next([i,a,o,r,m,l]),e.chartParams$.next({padding:{left:60,bottom:120}}),e.dataFormatter$.next({container:{rowAmount:1,columnAmount:1},gridList:[{rowLabels:["收入","支出"],columnLabels:["1月","2月","3月","4月","5月"]},{rowLabels:["午餐來客數","晚餐來客數"],columnLabels:["1月","2月","3月","4月","5月"]}],separateGrid:!1}),i.params$.next({gridIndexes:[0]})),t++,t>g&&(t=0)},2e3),e.data$.next(Y)}),N(()=>{clearInterval(u)}),(c,e)=>(U(),q("div",W))}});export{$t as default};
