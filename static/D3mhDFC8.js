import{S as u,t as A,m as T,k as m,l as D,s as L,be as y,bp as z,bM as C,bd as $,bq as F,g as f}from"./ZOIXw5Nq.js";import{d as X}from"./GYQj1fsP.js";const j=6,O="middle",v="hanging",w="start",B="hanging";function V({selection:l,position:b,xLabelClassName:d,fullParams:t,containerSize:a,fullDataFormatter:c,fullChartParams:r}){let p=t.tickPadding+t.labelOffset[0],s,n;b==="top"?(s=0,n=-t.tickPadding-t.labelOffset[1]):(s=a.height,n=t.tickPadding+t.labelOffset[1]);let k=n;l.selectAll(`g.${d}`).data([t]).join("g").classed(d,!0).each((o,x,g)=>{L(g[x]).selectAll("text").data([o]).join(i=>i.append("text").style("font-weight","bold"),i=>i,i=>i.remove()).attr("text-anchor",w).attr("dominant-baseline",B).attr("font-size",r.styles.textSize).style("fill",y(t.labelColorType,r)).attr("x",p).attr("y",k).text(i=>c.xAxis.label)}).attr("transform",o=>`translate(${a.width}, ${s})`)}function E({selection:l,position:b,xAxisClassName:d,fullParams:t,containerSize:a,fullChartParams:c,xScale:r,transitionDuration:h}){let p,s;b==="top"?(p=0,s=z(r)):(p=a.height,s=C(r));const n=l.selectAll(`g.${d}`).data([t]).join("g").classed(d,!0).attr("transform",`translate(0, ${p})`);let k=t.tickPadding;const o=s.scale(r).ticks(t.ticks).tickFormat(i=>$(i,t.tickFormat)).tickSize(t.tickFullLine==!0?-a.height:j).tickSizeOuter(-a.height).tickPadding(k),x=n.transition().duration(h).ease(F).call(o);return x.selectAll("line").style("fill","none").style("stroke",t.tickLineVisible==!0?y(t.tickColorType,c):"none").style("stroke-dasharray",t.tickFullLineDasharray).attr("pointer-events","none"),x.selectAll("path").style("fill","none").style("stroke",t.axisLineVisible==!0?y(t.axisLineColorType,c):"none").style("shape-rendering","crispEdges"),n.selectAll("text").attr("font-size",c.styles.textSize).style("color",y(t.tickTextColorType,c)).attr("text-anchor",O).attr("dominant-baseline",v).attr("dy",0),n}const I=(l,{selection:b,position$:d,computedData$:t,fullParams$:a,fullDataFormatter$:c,fullChartParams$:r,isCategorySeprate$:h,containerPosition$:p,containerSize$:s,xScale$:n,transitionDuration$:k})=>{const o=new u,x=f(l,"xAxisG"),g=f(l,"xAxis"),i=f(l,"xLabel"),S=X({selection:b,pluginName:l,clipPathID:null,computedData$:t,containerPosition$:p,isCategorySeprate$:h}).pipe(A(o)).pipe(A(o),T((e,M)=>e.selectAll(`g.${x}`).data([x]).join("g").classed(x,!0)));return m({axisSelection:S,position:d,fullParams:a,computedData:t,containerSize:s,fullDataFormatter:c,fullChartParams:r,xScale:n,transitionDuration:k}).pipe(A(o),D(async e=>e)).subscribe(e=>{E({selection:e.axisSelection,position:e.position,xAxisClassName:g,fullParams:e.fullParams,containerSize:e.containerSize,fullChartParams:e.fullChartParams,xScale:e.xScale,transitionDuration:e.transitionDuration}),V({selection:e.axisSelection,position:e.position,xLabelClassName:i,fullParams:e.fullParams,containerSize:e.containerSize,fullDataFormatter:e.fullDataFormatter,fullChartParams:e.fullChartParams})}),()=>{o.next(void 0)}};export{I as c};
