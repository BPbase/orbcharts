import{S as p,a as d,t as c,m,G as g,aO as b}from"./Cc0KHcL0.js";import{c as f}from"./BYPZi4ID.js";const r="GridLegend",R={name:r,defaultParams:g,layerIndex:b,validator:(o,{validateColumns:s})=>s(o,{placement:{toBe:'"top" | "top-start" | "top-end" | "bottom" | "bottom-start" | "bottom-end" | "left" | "left-start" | "left-end" | "right" | "right-start" | "right-end"',test:a=>["top","top-start","top-end","bottom","bottom-start","bottom-end","left","left-start","left-end","right","right-start","right-end"].includes(a)},padding:{toBeTypes:["number"]},backgroundFill:{toBeOption:"ColorType"},backgroundStroke:{toBeOption:"ColorType"},gap:{toBeTypes:["number"]},listRectWidth:{toBeTypes:["number"]},listRectHeight:{toBeTypes:["number"]},listRectRadius:{toBeTypes:["number"]},textColorType:{toBeOption:"ColorType"}})},B=p(R)(({selection:o,rootSelection:s,observer:t,subject:a})=>{const i=new d,n=t.fullParams$.pipe(c(i),m(e=>{const u=[{listRectWidth:e.listRectWidth,listRectHeight:e.listRectHeight,listRectRadius:e.listRectRadius}];return{...e,labelList:u}})),l=f(r,{rootSelection:s,legendLabels$:t.seriesLabels$,fullParams$:n,layout$:t.layout$,fullChartParams$:t.fullChartParams$,textSizePx$:t.textSizePx$});return()=>{i.next(void 0),l()}});export{B as G};
