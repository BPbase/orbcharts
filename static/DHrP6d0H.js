import{ac as A,aj as M,ae as J,af as q,an as z,ba as k,aq as V,as as W,ad as $,ab as X,bb as Y,A as G,bc as K,bd as S,S as E,t as m,m as b,a1 as Q,au as Z,n as L,o as O,d as tt,a2 as et,L as at,s as T,a3 as rt,a9 as lt}from"./CllDRATP.js";import{c as ot}from"./Bjf8oAlN.js";import{r as nt,s as st,t as it,j as _,g as j}from"./CWRPK8C-.js";import{o as ct}from"./DnisGkPQ.js";import{c as ut}from"./CYJ21Kf6.js";const pt=({computedData$:n})=>n.pipe(A(r=>{function l(e,a){return e.push(a),a.children&&a.children.forEach(u=>{e=l(e,u)}),e}return l([],r)})),gt=({nodeList$:n,fullDataFormatter$:r})=>{const l=r.pipe(A(e=>e.categoryLabels),M((e,a)=>JSON.stringify(e).length===JSON.stringify(a).length));return J({nodeList:n,categoryLabels:l}).pipe(q(async e=>e),A(e=>{const a=new Set(e.categoryLabels),u=new Set(e.nodeList.filter(c=>c.visible).map(c=>c.categoryLabel));return Array.from(u).forEach(c=>{a.has(c)||a.add(c)}),Array.from(a).forEach(c=>{u.has(c)||u.delete(c)}),Array.from(a)}),M((e,a)=>JSON.stringify(e).length===JSON.stringify(a).length))},dt=({computedData$:n})=>n.pipe(A(r=>{function l(e){return e.children&&(e.children=e.children.filter(a=>a.visible).map(a=>l(a))),e}return l(r)})),yt=n=>z(n,{visibleFilter:{toBeTypes:["Function"]},categoryLabels:{toBeTypes:["string[]"]}}),mt=n=>{const{data:r=[],dataFormatter:l,chartParams:e}=n,a=new Map(l.categoryLabels.map((c,p)=>[c,p]));let u={id:"",index:0,label:"",description:"",categoryIndex:0,categoryLabel:"",color:"",visible:!0,data:{},value:0,level:0,seq:0,children:[]};try{const c=function(){if(k(r)===!0)return JSON.parse(JSON.stringify(r));if(Array.isArray(r)===!1)return{id:""};let s;const i=new Map;r.forEach(o=>{if(!o.parent)s=o;else{const g=i.get(o.parent)??[];g.push(o),i.set(o.parent,g)}});const y=o=>({id:o.id,label:o.label,data:o.data,value:o.value,categoryLabel:o.categoryLabel,children:(i.get(o.id)??[]).map(g=>y(g))});return s?y(s):{id:""}}();let p=0;const t=(s,i,y)=>{const o=i+1,g=s.categoryLabel??null;let x=0;g!=null&&(a.has(g)||a.set(g,a.size),x=a.get(g)??0);const R=p;p++;const d={id:s.id,index:R,level:i,seq:y,label:s.label??"",description:s.description??"",categoryIndex:x,categoryLabel:g,color:V(x,e),data:s.data??{},value:s.value,visible:!0,children:(s.children??[]).map((f,B)=>t(f,o,B))};return d.visible=l.visibleFilter(d,n),d};u=t(c,0,0)}catch(c){throw Error(c)}return u},ht=n=>z({data:n},{data:{toBe:"DataTreeObj | DataTreeDatum[]",test:l=>k(l)&&l.id!==void 0}}),ft=({subject:n,observer:r})=>{const l=W(r.fullChartParams$).pipe($(1)),e=pt({computedData$:r.computedData$}).pipe($(1)),a=X({datumList$:e,fullChartParams$:r.fullChartParams$,event$:n.event$}).pipe($(1)),u=gt({nodeList$:e,fullDataFormatter$:r.fullDataFormatter$}).pipe($(1)),c=Y({datumList$:e}).pipe($(1)),p=dt({computedData$:r.computedData$}).pipe($(1));return{fullParams$:r.fullParams$,fullChartParams$:r.fullChartParams$,fullDataFormatter$:r.fullDataFormatter$,computedData$:r.computedData$,layout$:r.layout$,textSizePx$:l,treeHighlight$:a,existCategoryLabels$:u,CategoryDataMap$:c,visibleComputedData$:p}};class Bt extends G{constructor(r,l){super({defaultDataFormatter:K,dataFormatterValidator:yt,computedDataFn:mt,dataValidator:ht,contextObserverCallback:ft},r,l)}}const H="TreeLegend",$t={name:H,defaultParams:Q,layerIndex:Z,validator:(n,{validateColumns:r})=>r(n,{placement:{toBe:'"top" | "top-start" | "top-end" | "bottom" | "bottom-start" | "bottom-end" | "left" | "left-start" | "left-end" | "right" | "right-start" | "right-end"',test:e=>["top","top-start","top-end","bottom","bottom-start","bottom-end","left","left-start","left-end","right","right-start","right-end"].includes(e)},padding:{toBeTypes:["number"]},backgroundFill:{toBeOption:"ColorType"},backgroundStroke:{toBeOption:"ColorType"},gap:{toBeTypes:["number"]},listRectWidth:{toBeTypes:["number"]},listRectHeight:{toBeTypes:["number"]},listRectRadius:{toBeTypes:["number"]},textColorType:{toBeOption:"ColorType"}})},St=S($t)(({selection:n,rootSelection:r,observer:l,subject:e})=>{const a=new E,u=l.CategoryDataMap$.pipe(m(a),b(t=>Array.from(t.keys()))),c=l.fullParams$.pipe(m(a),b(t=>{const s=[{listRectWidth:t.listRectWidth,listRectHeight:t.listRectHeight,listRectRadius:t.listRectRadius}];return{...t,seriesList:s}})),p=ot(H,{rootSelection:r,seriesLabels$:u,fullParams$:c,layout$:l.layout$,fullChartParams$:l.fullChartParams$,textSizePx$:l.textSizePx$});return()=>{a.next(void 0),p()}}),h="TreeMap",v=j(h,"tree"),w=j(h,"tile"),bt={name:h,defaultParams:et,layerIndex:at,validator:(n,{validateColumns:r})=>r(n,{paddingInner:{toBeTypes:["number"]},paddingOuter:{toBeTypes:["number"]},labelColorType:{toBeOption:"ColorType"},squarifyRatio:{toBeTypes:["number"]},sort:{toBeTypes:["Function"]}})};function xt({selection:n,treeData:r,fullParams:l,fullChartParams:e,textSizePx:a}){const u=a/2,c=a,p=n.selectAll(`g.${v}`).data(r,t=>t.data.id).join("g").attr("class",v);return p.attr("transform",t=>!t.x0||!t.y0?null:`translate(${t.x0},${t.y0})`).each((t,s,i)=>{const y=T(i[s]);y.selectAll(`rect.${w}`).data([t],o=>o.data.id).join("rect").attr("id",o=>o.data.id).attr("class",w).attr("cursor","pointer").attr("width",o=>o.x1-o.x0).attr("height",o=>o.y1-o.y0).attr("fill",o=>o.data.color).attr("data-name",o=>o.data.label).attr("data-category",o=>o.data.categoryLabel).attr("data-value",o=>o.data.value),y.selectAll("g").data([t]).join("g").each((o,g,x)=>{T(x[g]).selectAll("text").data([o]).join("text").text(d=>d.data.label).attr("dominant-baseline","hanging").attr("x",u).attr("y",u).attr("font-size",e.styles.textSize).each(function(d){const f=T(this),B=d.data.label.split(/\s+/).reverse();let P,C=[];const F=f.attr("x");let I=f.attr("y"),N=0,D=f.text(null).append("tspan").attr("cursor","pointer").attr("fill",_(l.labelColorType,e)).attr("font-size",e.styles.textSize).attr("x",F).attr("y",I);for(;P=B.pop();)C.push(P),D.text(C.join(" ")),D.node().getComputedTextLength()>d.x1-d.x0-u&&(C.pop(),D.text(C.join(" ")),C=[P],N+=c,D=f.append("tspan").attr("cursor","pointer").attr("fill",_(l.labelColorType,e)).attr("font-size",e.styles.textSize).attr("x",F).attr("y",I).attr("dy",N+"px").text(P))})})}),p}function Ct({selection:n,ids:r,fullChartParams:l}){if(n.interrupt("highlight"),!r.length){n.transition("highlight").duration(200).style("opacity",1);return}n.each((e,a,u)=>{r.includes(e.data.id)?T(u[a]).style("opacity",1):T(u[a]).style("opacity",l.styles.unhighlightedOpacity)})}const Et=S(bt)(({selection:n,name:r,subject:l,observer:e})=>{const a=new E,u=L({layout:e.layout$,visibleComputedData:e.visibleComputedData$,fullParams:e.fullParams$,fullDataFormatter:e.fullDataFormatter$,fullChartParams:e.fullChartParams$}).pipe(m(a),O(async t=>t),b(t=>{const s=nt().size([t.layout.width,t.layout.height]).paddingInner(t.fullParams.paddingInner).paddingOuter(t.fullParams.paddingOuter).round(!0).tile(st.ratio(t.fullParams.squarifyRatio)),i=it(t.visibleComputedData).sum(o=>o.value).sort(t.fullParams.sort);return s(i),i.leaves()})),c=L({selection:ct(n),treeData:u,fullParams:e.fullParams$,fullChartParams:e.fullChartParams$,textSizePx:e.textSizePx$}).pipe(m(a),O(async t=>t),b(t=>xt({selection:n,treeData:t.treeData,fullParams:t.fullParams,fullChartParams:t.fullChartParams,textSizePx:t.textSizePx}))),p=e.fullChartParams$.pipe(m(a),b(t=>t.highlightTarget),tt());return L({cellSelection:c,computedData:e.computedData$,treeData:u,fullParams:e.fullParams$,fullChartParams:e.fullChartParams$,highlightTarget:p,CategoryDataMap:e.CategoryDataMap$}).pipe(m(a),O(async t=>t)).subscribe(t=>{t.cellSelection.on("mouseover",(s,i)=>{s.stopPropagation(),l.event$.next({type:"tree",eventName:"mouseover",pluginName:h,highlightTarget:t.highlightTarget,datum:i.data,category:t.CategoryDataMap.get(i.data.categoryLabel),categoryIndex:i.data.categoryIndex,categoryLabel:i.data.categoryLabel,event:s,data:t.computedData})}).on("mousemove",(s,i)=>{s.stopPropagation(),l.event$.next({type:"tree",eventName:"mousemove",pluginName:h,highlightTarget:t.highlightTarget,datum:i.data,category:t.CategoryDataMap.get(i.data.categoryLabel),categoryIndex:i.data.categoryIndex,categoryLabel:i.data.categoryLabel,event:s,data:t.computedData})}).on("mouseout",(s,i)=>{s.stopPropagation(),l.event$.next({type:"tree",eventName:"mouseout",pluginName:h,highlightTarget:t.highlightTarget,datum:i.data,category:t.CategoryDataMap.get(i.data.categoryLabel),categoryIndex:i.data.categoryIndex,categoryLabel:i.data.categoryLabel,event:s,data:t.computedData})}).on("click",(s,i)=>{s.stopPropagation(),l.event$.next({type:"tree",eventName:"click",pluginName:h,highlightTarget:t.highlightTarget,datum:i.data,category:t.CategoryDataMap.get(i.data.categoryLabel),categoryIndex:i.data.categoryIndex,categoryLabel:i.data.categoryLabel,event:s,data:t.computedData})})}),L({cellSelection:c,highlight:e.treeHighlight$.pipe(b(t=>t.map(s=>s.id))),fullChartParams:e.fullChartParams$}).pipe(m(a),O(async t=>t)).subscribe(t=>{Ct({selection:t.cellSelection,ids:t.highlight,fullChartParams:t.fullChartParams})}),()=>{a.next(void 0)}}),U="TreeTooltip",Tt={name:U,defaultParams:rt,layerIndex:lt,validator:(n,{validateColumns:r})=>r(n,{backgroundColorType:{toBeOption:"ColorType"},backgroundOpacity:{toBeTypes:["number"]},strokeColorType:{toBeOption:"ColorType"},offset:{toBe:"[number, number]",test:e=>Array.isArray(e)&&e.length===2&&typeof e[0]=="number"&&typeof e[1]=="number"},padding:{toBeTypes:["number"]},textColorType:{toBeOption:"ColorType"},renderFn:{toBeTypes:["Function"]}})},Rt=S(Tt)(({selection:n,rootSelection:r,name:l,subject:e,observer:a})=>{const u=new E,c=ut(U,{rootSelection:r,fullParams$:a.fullParams$,fullChartParams$:a.fullChartParams$,layout$:a.layout$,event$:e.event$});return()=>{u.next(void 0),c()}});export{St as T,Et as a,Rt as b,Bt as c};
