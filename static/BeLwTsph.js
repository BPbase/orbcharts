import{e as A,M as D,S as F,t as o,m as s,o as P,p as c,s as G}from"./B90BryHn.js";import{c as I}from"./DRyNh0c7.js";import{m as S}from"./CH0US8tK.js";import{g as h}from"./VvZonOBc.js";import{g as L,a as b,b as O}from"./CiPKmAif.js";import{o as T}from"./fbVbHJU8.js";const u="OverlappingValueAxes",g=h(u,"grid"),M=A(u,D)(({selection:p,name:C,subject:v,observer:i})=>{const a=new F,m=[],$=i.fullParams$.pipe(o(a),s(e=>e.gridIndexes[0])),x=i.fullParams$.pipe(o(a),s(e=>e.gridIndexes[1])),f=P({firstGridIndex:$,secondGridIndex:x,fullDataFormatter:i.fullDataFormatter$}).pipe(o(a),c(async e=>e),s(e=>{e.fullDataFormatter.gridList[e.secondGridIndex]||(e.fullDataFormatter.gridList[e.secondGridIndex]=Object.assign({},e.fullDataFormatter.gridList[e.firstGridIndex]));const r=e.fullDataFormatter.gridList[e.firstGridIndex].valueAxis.position;let t=r;return r==="left"?t="right":r==="bottom"?t="top":r==="top"?t="bottom":r==="right"&&(t="left"),{type:"grid",visibleFilter:e.fullDataFormatter.visibleFilter,grid:{...e.fullDataFormatter.gridList[e.secondGridIndex],valueAxis:{...e.fullDataFormatter.gridList[e.secondGridIndex].valueAxis,position:t}},container:{...e.fullDataFormatter.container}}}));return T(i).pipe(o(a),s(e=>({...e,fullParams$:e.fullParams$.pipe(s(r=>(r.gridIndexes.length>2&&(r.gridIndexes.length=2),r)))})),c(e=>S(e)),s(e=>e.map((r,t)=>{if(t===0)return r;const n=L({fullDataFormatter$:f,layout$:i.layout$}),d=b({gridAxesTransform$:n}),l=O({computedData$:r.computedData$,fullDataFormatter$:f,layout$:i.layout$});return{...r,gridAxesTransform$:n,gridAxesReverseTransform$:d,gridContainerPosition$:l}}))).pipe(o(a)).subscribe(e=>{m.forEach(r=>r()),p.selectAll(`g.${g}`).data(e).join("g").attr("class",g).each((r,t,n)=>{if(t>1)return;const d=G(n[t]);m[t]=I(u,{selection:d,computedData$:r.computedData$,fullParams$:i.fullParams$.pipe(s(l=>t===0?l.firstAxis:l.secondAxis)),fullDataFormatter$:r.dataFormatter$,fullChartParams$:i.fullChartParams$,gridAxesTransform$:r.gridAxesTransform$,gridAxesReverseTransform$:r.gridAxesReverseTransform$,gridAxesSize$:r.gridAxesSize$,gridContainerPosition$:r.gridContainerPosition$,isSeriesSeprate$:r.isSeriesSeprate$})})}),()=>{a.next(void 0),m.forEach(e=>e())}});export{M as O};
