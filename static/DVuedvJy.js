import{ar as r,aJ as S,az as e,aC as D,aF as F,aK as P,aL as R,aG as G,aH as M,aM as z,bn as V}from"./Cc0KHcL0.js";import{r as L,g as j,a as k,b as w,e as _,d as E,f as H,h as U,i as I,j as J,k as K,l as q,m as N,n as Q,s as W}from"./BA8G9O0Y.js";const X=o=>{const t=r(o,{visibleFilter:{toBeTypes:["Function"]},container:{toBeTypes:["object"]},seriesDirection:{toBe:'"row" | "column"',test:s=>s==="row"||s==="column"},rowLabels:{toBeTypes:["string[]"]},columnLabels:{toBeTypes:["string[]"]},valueAxis:{toBeTypes:["object"]},groupAxis:{toBeTypes:["object"]},separateSeries:{toBeTypes:["boolean"]}});if(t.status==="error")return t;if(o.valueAxis){const s=r(o.valueAxis,{position:{toBe:'"bottom" | "left" | "top" | "right"',test:a=>a==="bottom"||a==="left"||a==="top"||a==="right"},scaleDomain:{toBe:'[number | "min" | "auto", number | "max" | "auto"]',test:a=>Array.isArray(a)&&a.length===2&&(typeof a[0]=="number"||a[0]==="min"||a[0]==="auto")&&(typeof a[1]=="number"||a[1]==="max"||a[1]==="auto")},scaleRange:{toBe:"[number, number]",test:a=>Array.isArray(a)&&a.length===2&&typeof a[0]=="number"&&typeof a[1]=="number"},label:{toBeTypes:["string"]}});if(s.status==="error")return s}if(o.groupAxis){const s=r(o.groupAxis,{position:{toBe:'"bottom" | "left" | "top" | "right"',test:a=>a==="bottom"||a==="left"||a==="top"||a==="right"},scaleDomain:{toBe:'[number, number | "max"]',test:a=>Array.isArray(a)&&a.length===2&&typeof a[0]=="number"&&(typeof a[1]=="number"||a[1]==="max")},scalePadding:{toBeTypes:["number"]},label:{toBeTypes:["string"]}});if(s.status==="error")return s}if(o.container){const s=r(o.container,{gap:{toBeTypes:["number"]},rowAmount:{toBeTypes:["number"]},columnAmount:{toBeTypes:["number"]}});if(s.status==="error")return s}return t},Y=o=>r({data:o},{data:{toBe:"(DataGridDatum | DataGridValue)[][]",test:s=>Array.isArray(s)}}),Z=({subject:o,observer:t})=>{const s=S(t.fullChartParams$).pipe(e(1)),a=t.fullDataFormatter$.pipe(D(u=>u.separateSeries),F(),e(1)),i=L({computedData$:t.computedData$,fullDataFormatter$:t.fullDataFormatter$,layout$:t.layout$}).pipe(e(1)),m=P({layout$:t.layout$,containerPosition$:i}).pipe(e(1)),f=j({fullDataFormatter$:t.fullDataFormatter$,layout$:t.layout$}).pipe(e(1)),b=k({fullDataFormatter$:t.fullDataFormatter$,containerSize$:m}).pipe(e(1)),l=t.computedData$.pipe(D(u=>u.flat())).pipe(e(1)),g=R({datumList$:l,fullChartParams$:t.fullChartParams$,event$:o.event$}).pipe(e(1)),y=w({computedData$:t.computedData$}),A=G({datumList$:l}).pipe(e(1)),x=M({datumList$:l}).pipe(e(1)),c=_({computedData$:t.computedData$,fullDataFormatter$:t.fullDataFormatter$,layout$:t.layout$}).pipe(e(1)),h=E({computedData$:t.computedData$}).pipe(e(1)),T=H({computedAxesData$:c}).pipe(e(1)),O=U({computedData$:t.computedData$,isSeriesSeprate$:a}).pipe(e(1)),n=I({computedData$:t.computedData$,fullDataFormatter$:t.fullDataFormatter$}).pipe(e(1)),$=J({computedData$:t.computedData$,groupScaleDomainValue$:n}).pipe(e(1)),p=K({fullDataFormatter$:t.fullDataFormatter$,layout$:t.layout$}).pipe(e(1)),B=q({gridAxesTransform$:p}).pipe(e(1)),d=N({computedData$:t.computedData$,groupScaleDomainValue$:n,filteredMinMaxValue$:$,fullDataFormatter$:t.fullDataFormatter$,layout$:t.layout$}).pipe(e(1)),C=Q({gridContainerPosition$:i,gridAxesTransform$:p,gridGraphicTransform$:d}).pipe(e(1));return{fullParams$:t.fullParams$,fullChartParams$:t.fullChartParams$,fullDataFormatter$:t.fullDataFormatter$,computedData$:t.computedData$,layout$:t.layout$,textSizePx$:s,isSeriesSeprate$:a,gridContainerPosition$:i,containerSize$:m,gridAxesSize$:f,gridAxesContainerSize$:b,gridHighlight$:g,seriesLabels$:y,SeriesDataMap$:A,GroupDataMap$:x,computedAxesData$:c,visibleComputedData$:h,visibleComputedAxesData$:T,computedStackedData$:O,groupScaleDomainValue$:n,filteredMinMaxValue$:$,gridAxesTransform$:p,gridAxesReverseTransform$:B,gridGraphicTransform$:d,gridGraphicReverseScale$:C}};class at extends z{constructor(t,s){super({defaultDataFormatter:V,dataFormatterValidator:X,computedDataFn:W,dataValidator:Y,contextObserverCallback:Z},t,s)}}export{at as G};
