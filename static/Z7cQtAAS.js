import{at as i,az as O,aj as e,ai as d,ap as C,ah as S,aq as F,ar as R,A as P,aW as G}from"./Dh2HIxf9.js";import{q as L,g as M,a as V,c as j,b as z,d as k,e as w,f as _,h as q,i as E,j as U,k as H,l as I,r as W}from"./BqHtTwBw.js";const J=o=>{const t=i(o,{visibleFilter:{toBeTypes:["Function"]},grid:{toBeTypes:["object"]},container:{toBeTypes:["object"]}});if(o.grid){const r=i(o.grid,{seriesDirection:{toBe:'"row" | "column"',test:s=>s==="row"||s==="column"},rowLabels:{toBeTypes:["string[]"]},columnLabels:{toBeTypes:["string[]"]},valueAxis:{toBeTypes:["object"]},groupAxis:{toBeTypes:["object"]},separateSeries:{toBeTypes:["boolean"]}});if(r.status==="error")return r;if(o.grid.valueAxis){const s=i(o.grid.valueAxis,{position:{toBe:'"bottom" | "left" | "top" | "right"',test:a=>a==="bottom"||a==="left"||a==="top"||a==="right"},scaleDomain:{toBe:'[number | "min" | "auto", number | "max" | "auto"]',test:a=>Array.isArray(a)&&a.length===2&&(typeof a[0]=="number"||a[0]==="min"||a[0]==="auto")&&(typeof a[1]=="number"||a[1]==="max"||a[1]==="auto")},scaleRange:{toBe:"[number, number]",test:a=>Array.isArray(a)&&a.length===2&&typeof a[0]=="number"&&typeof a[1]=="number"},label:{toBeTypes:["string"]}});if(s.status==="error")return s}if(o.grid.groupAxis){const s=i(o.grid.groupAxis,{position:{toBe:'"bottom" | "left" | "top" | "right"',test:a=>a==="bottom"||a==="left"||a==="top"||a==="right"},scaleDomain:{toBe:'[number, number | "max"]',test:a=>Array.isArray(a)&&a.length===2&&typeof a[0]=="number"&&(typeof a[1]=="number"||a[1]==="max")},scalePadding:{toBeTypes:["number"]},label:{toBeTypes:["string"]}});if(s.status==="error")return s}}if(o.container){const r=i(o.container,{gap:{toBeTypes:["number"]},rowAmount:{toBeTypes:["number"]},columnAmount:{toBeTypes:["number"]}});if(r.status==="error")return r}return t},K=o=>i({data:o},{data:{toBe:"(DataGridDatum | DataGridValue)[][]",test:r=>Array.isArray(r)}}),N=({subject:o,observer:t})=>{const r=O(t.fullChartParams$).pipe(e(1)),s=t.fullDataFormatter$.pipe(d(n=>n.grid.separateSeries),C(),e(1)),a=L({computedData$:t.computedData$,fullDataFormatter$:t.fullDataFormatter$,layout$:t.layout$}),D=M({fullDataFormatter$:t.fullDataFormatter$,layout$:t.layout$}).pipe(e(1)),l=t.computedData$.pipe(d(n=>n.flat())).pipe(e(1)),f=S({datumList$:l,fullChartParams$:t.fullChartParams$,event$:o.event$}).pipe(e(1)),g=V({computedData$:t.computedData$}),b=F({datumList$:l}).pipe(e(1)),y=R({datumList$:l}).pipe(e(1)),m=j({computedData$:t.computedData$,fullDataFormatter$:t.fullDataFormatter$,layout$:t.layout$}).pipe(e(1)),A=z({computedData$:t.computedData$}).pipe(e(1)),h=k({computedLayoutData$:m}).pipe(e(1)),x=w({computedData$:t.computedData$,isSeriesSeprate$:s}).pipe(e(1)),p=_({computedData$:t.computedData$,fullDataFormatter$:t.fullDataFormatter$}).pipe(e(1)),c=q({computedData$:t.computedData$,groupScaleDomainValue$:p}).pipe(e(1)),u=E({fullDataFormatter$:t.fullDataFormatter$,layout$:t.layout$}).pipe(e(1)),T=U({gridAxesTransform$:u}).pipe(e(1)),$=H({computedData$:t.computedData$,groupScaleDomainValue$:p,filteredMinMaxValue$:c,fullDataFormatter$:t.fullDataFormatter$,layout$:t.layout$}).pipe(e(1)),B=I({gridContainerPosition$:a,gridAxesTransform$:u,gridGraphicTransform$:$});return{fullParams$:t.fullParams$,fullChartParams$:t.fullChartParams$,fullDataFormatter$:t.fullDataFormatter$,computedData$:t.computedData$,layout$:t.layout$,textSizePx$:r,isSeriesSeprate$:s,gridContainerPosition$:a,gridAxesSize$:D,gridHighlight$:f,seriesLabels$:g,SeriesDataMap$:b,GroupDataMap$:y,computedLayoutData$:m,visibleComputedData$:A,visibleComputedLayoutData$:h,computedStackedData$:x,groupScaleDomainValue$:p,filteredMinMaxValue$:c,gridAxesTransform$:u,gridAxesReverseTransform$:T,gridGraphicTransform$:$,gridGraphicReverseScale$:B}};class Y extends P{constructor(t,r){super({defaultDataFormatter:G,dataFormatterValidator:J,computedDataFn:W,dataValidator:K,contextObserverCallback:N},t,r)}}export{Y as G};
