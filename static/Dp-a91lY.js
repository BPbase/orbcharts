import{I as b,x as t,w as m,E as C,v as x,F as S,G as A,J as G,ar as P}from"./Bse6l6cm.js";import{m as T,g as L,a as R,b as M,d as z,e as E,s as _,h as k,f as v,i as I,j as U,n as V}from"./BRWr9zRi.js";const j=({subject:i,observer:a})=>{const e=b(a.fullChartParams$).pipe(t(1)),p=a.fullDataFormatter$.pipe(m(r=>r.grid.separateSeries),C(),t(1)),o=T({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}),s=L({fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),c=R({gridAxesTransform$:s}).pipe(t(1)),u=M({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),d=z({gridContainerPosition$:o,gridAxesTransform$:s,gridGraphicTransform$:u}),D=E({fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),l=a.computedData$.pipe(m(r=>r.flat())).pipe(t(1)),n=x({datumList$:l,fullChartParams$:a.fullChartParams$,event$:i.event$}).pipe(t(1)),f=_({computedData$:a.computedData$}),g=S({datumList$:l}).pipe(t(1)),h=A({datumList$:l}).pipe(t(1)),$=k({computedData$:a.computedData$,fullDataFormatter$:a.fullDataFormatter$,layout$:a.layout$}).pipe(t(1)),F=v({computedData$:a.computedData$}).pipe(t(1)),O=I({computedLayoutData$:$}).pipe(t(1)),y=U({computedData$:a.computedData$,isSeriesSeprate$:p}).pipe(t(1));return{fullParams$:a.fullParams$,fullChartParams$:a.fullChartParams$,fullDataFormatter$:a.fullDataFormatter$,computedData$:a.computedData$,layout$:a.layout$,textSizePx$:e,isSeriesSeprate$:p,gridContainerPosition$:o,gridAxesTransform$:s,gridAxesReverseTransform$:c,gridGraphicTransform$:u,gridGraphicReverseScale$:d,gridAxesSize$:D,gridHighlight$:n,seriesLabels$:f,SeriesDataMap$:g,GroupDataMap$:h,computedLayoutData$:$,visibleComputedData$:F,visibleComputedLayoutData$:O,computedStackedData$:y}};class J extends G{constructor(a,e){super({defaultDataFormatter:P,computedDataFn:V,contextObserverFn:j},a,e)}}export{J as G};
