import{s as w}from"./ZyhQjORC.js";import{j as A,S as h,b as D}from"./qbpNAjKn.js";import{D as L,c as S,d as P,M as v,a as C,b as T,m as G}from"./BESy59oE.js";import{c as _,a as F,M as j,O as R}from"./DbqYFEz2.js";import{a as I}from"./B2YBZYj8.js";import{c as E}from"./DEdn1kP6.js";import{T as V}from"./YPjqIB9Z.js";import{n as B,q as U,s as y,o as N,c as k}from"./CN2XhPue.js";import"./1ujJLabB.js";import"./CNN2D5vW.js";import"./DKExitx-.js";import"./C8y5ZR3_.js";import"./CvTiJEiv.js";const g="MultiDots",p=I(g,"grid"),z=A(g,L)(({selection:d,name:$,subject:c,observer:e})=>{const s=new h,a=[];return S(e).subscribe(i=>{a.forEach(t=>t()),d.selectAll(`g.${p}`).data(i).join("g").attr("class",p).each((t,n,m)=>{const o=D(m[n]);a[n]=_(g,{selection:o,computedData$:t.gridComputedData$,visibleComputedData$:t.visibleComputedData$,existedSeriesLabels$:t.existedSeriesLabels$,SeriesDataMap$:t.SeriesDataMap$,GroupDataMap$:t.GroupDataMap$,fullParams$:e.fullParams$,fullChartParams$:e.fullChartParams$,gridAxesTransform$:t.gridAxesTransform$,gridGraphicTransform$:t.gridGraphicTransform$,gridGraphicReverseScale$:t.gridGraphicReverseScale$,gridAxesSize$:t.gridAxesSize$,gridHighlight$:t.gridHighlight$,gridContainer$:t.gridContainer$,event$:c.event$})})}),()=>{s.next(void 0),a.forEach(i=>i())}}),x="MultiValueAxis",f=I(x,"grid"),O=A(x,P)(({selection:d,name:$,subject:c,observer:e})=>{const s=new h,a=[];return S(e).subscribe(i=>{a.forEach(t=>t()),d.selectAll(`g.${f}`).data(i).join("g").attr("class",f).each((t,n,m)=>{const o=D(m[n]);a[n]=E(x,{selection:o,computedData$:t.gridComputedData$,fullParams$:e.fullParams$,fullDataFormatter$:t.gridDataFormatter$,fullChartParams$:e.fullChartParams$,gridAxesTransform$:t.gridAxesTransform$,gridAxesReverseTransform$:t.gridAxesReverseTransform$,gridAxesSize$:t.gridAxesSize$,gridContainer$:t.gridContainer$,isSeriesPositionSeprate$:t.isSeriesPositionSeprate$})})}),()=>{s.next(void 0),a.forEach(i=>i())}}),q={id:"chart",style:{width:"100%",height:"100vh"}},st=B({__name:"index",setup(d){let $;return U(()=>{const c=document.querySelector("#chart"),e=new v(c,{}),s=new C,a=new F,l=new z,i=new T,t=new j,n=new O,m=new R,o=new V;e.plugins$.next([t,m,s,a,l,i,o]),i.params$.next({position:"bottom",justify:"center"}),e.chartParams$.next({padding:{bottom:200},highlightTarget:"series"}),n.params$.next({gridIndexes:[0,1]});let r=0,u=0;const M=8,b=1;$=w(()=>{console.log("i:",r,",j:",u),r==0?(e.plugins$.next([t,n,s,a,l,i,o]),e.dataFormatter$.next({container:{rowAmount:1,columnAmount:2},gridList:[{slotIndex:0},{slotIndex:1}]}),t.params$.next({gridIndexes:[0,1],tickTextRotate:-30}),n.params$.next({gridIndexes:[0,1]})):r==1?e.dataFormatter$.next({container:{rowAmount:1,columnAmount:3},gridList:[{seriesSlotIndexes:[0,1]},{slotIndex:2}]}):r==2?e.dataFormatter$.next({container:{rowAmount:2,columnAmount:2},gridList:[{seriesSlotIndexes:[0,1]},{seriesSlotIndexes:[2,3]}]}):r==3?(e.plugins$.next([t,m,s,a,l,i,o]),e.dataFormatter$.next({gridList:[{gridData:{seriesDirection:"column"}},{}]})):r==4?(e.plugins$.next([t,n,s,a,l,i,o]),e.dataFormatter$.next({container:{rowAmount:2,columnAmount:3},gridList:[{gridData:{seriesDirection:"column"},seriesSlotIndexes:[0,1,2,3,4]},{slotIndex:5}]})):r==5?(e.chartParams$.next({padding:{left:120,bottom:200}}),e.dataFormatter$.next({container:{rowAmount:2,columnAmount:3,gap:120},gridList:[{gridData:{seriesDirection:"column"},seriesSlotIndexes:[0,1,2,3,4],groupAxis:{position:"left"},valueAxis:{position:"bottom"}},{slotIndex:5}]}),t.params$.next({tickTextRotate:0})):r==6?(e.plugins$.next([t,m,s,a,l,i,o]),e.chartParams$.next({padding:{left:120,bottom:200}}),e.dataFormatter$.next({container:{rowAmount:1,columnAmount:2},gridList:[{gridData:{seriesDirection:"column"},groupAxis:{position:"left"},valueAxis:{position:"bottom"}},{slotIndex:1}]}),t.params$.next({gridIndexes:[0]}),n.params$.next({gridIndexes:[1]})):r==7?(u==0?(s.params$.next({barRadius:!0}),a.params$.next({lineCurve:"curveMonotoneX"})):u==1&&(s.params$.next({}),a.params$.next({})),u++,u>b&&(u=0)):r==8&&e.dataFormatter$.next({container:{rowAmount:1,columnAmount:1},gridList:[{slotIndex:0},{slotIndex:0}]}),r++,r>M&&(r=0)},1500),e.data$.next(G)}),y(()=>{clearInterval($)}),(c,e)=>(N(),k("div",q))}});export{st as default};
