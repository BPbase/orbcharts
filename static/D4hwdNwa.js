import{S as V,p as Z,t as m,m as S,d as w,j as M,k as G,s as F,aN as pe,g as X,y as W,O as ge,f as ce,E as de,u as me,a9 as he,i as xe,K as $e,b0 as ye,b1 as q,b2 as fe,b3 as De,b4 as Se}from"./DFL_iQJX.js";import{g as Ae,b as Te,d as Le,c as Pe,e as be}from"./DDuHRGxi.js";import{n as te,o as Ce,p as Ie}from"./CAULZloK.js";import{f as Ge}from"./9rwOTvgN.js";import{c as Me}from"./CgWYzkuE.js";import{c as Re}from"./DyWp5Od5.js";import{d as ee}from"./CEjAtfAv.js";function Be(o="curveLinear",s){return Te().x(e=>e.axisX).y0(e=>s).y1(e=>e.axisY).curve(Le[o])}function _e(o){let s=[[]],e=0;for(let r in o){if(o[r].visible==!1||o[r].value===void 0||o[r].value===null){s[e].length&&(e++,s[e]=[]);continue}s[e].push(o[r])}return s}function we({selection:o,pathClassName:s,segmentData:e,areaPath:r,linearGradientIds:a,params:n}){return o.selectAll("path").data(e,(l,u)=>l.length?`${l[0].id}_${l[l.length-1].id}`:u).join(l=>l.append("path").classed(s,!0).attr("fill","none").style("vector-effect","non-scaling-stroke").style("cursor","pointer"),l=>l,l=>l.remove()).attr("fill",(l,u)=>l[0]?`url(#${a[l[0].seriesIndex]})`:"").attr("d",l=>r(l))}function Fe({selection:o,seriesLabel:s,fullChartParams:e}){if(o.interrupt("highlight"),!s){o.transition("highlight").duration(200).style("opacity",1);return}o.each((r,a,n)=>{r===s?F(n[a]).style("opacity",1):F(n[a]).style("opacity",e.styles.unhighlightedOpacity)})}function Oe({defsSelection:o,computedData:s,linearGradientIds:e,params:r}){o.selectAll("linearGradient").data(s??[]).join(a=>a.append("linearGradient").attr("x1","0%").attr("x2","0%").attr("y1","100%").attr("y2","0%").attr("spreadMethod","pad"),a=>a,a=>a.remove()).attr("id",(a,n)=>a[0]?e[a[0].seriesIndex]:"").html((a,n)=>{const h=a[0]?a[0].color:"";return`
        <stop offset="0%"   stop-color="${h}" stop-opacity="${r.linearGradientOpacity[0]}"/>
        <stop offset="100%" stop-color="${h}" stop-opacity="${r.linearGradientOpacity[1]}"/>
      `})}function ke({defsSelection:o,clipPathData:s,transitionDuration:e,transitionEase:r}){o.selectAll("clipPath").data(s).join(a=>a.append("clipPath"),a=>a,a=>a.remove()).attr("id",a=>a.id).each((a,n,h)=>{F(h[n]).selectAll("rect").data([a]).join(l=>{const u=l.append("rect");return u.transition().duration(e).ease(Ae(r)).tween("tween",(g,A,x)=>C=>{const T=g.width*C;u.attr("x",0).attr("y",0).attr("width",D=>T).attr("height",D=>D.height)}),u},l=>l.attr("x",0).attr("y",0).attr("width",u=>u.width).attr("height",u=>u.height),l=>l.remove())})}const Ee=(o,{selection:s,computedData$:e,computedLayoutData$:r,visibleComputedData$:a,visibleComputedLayoutData$:n,seriesLabels$:h,SeriesDataMap$:l,GroupDataMap$:u,fullParams$:g,fullDataFormatter$:A,fullChartParams$:x,gridAxesTransform$:C,gridGraphicTransform$:T,gridAxesSize$:D,gridHighlight$:$,gridContainerPosition$:O,layout$:E,event$:k})=>{const I=new V,v=Z(o,"clipPath-box"),i=X(o,"path"),{seriesSelection$:L,axesSelection$:y,defsSelection$:P,graphicGSelection$:H}=te({selection:s,pluginName:o,clipPathID:v,seriesLabels$:h,gridContainerPosition$:O,gridAxesTransform$:C,gridGraphicTransform$:T}),Y=T.pipe(m(I),S(t=>-t.translate[1]/t.scale[1])),Q=new pe(t=>{const f=M({fullParams:g,valueAxisStart:Y}).pipe(m(I)).subscribe(d=>{const c=Be(d.fullParams.lineCurve,d.valueAxisStart);t.next(c)});return()=>{f.unsubscribe()}}),b=x.pipe(S(t=>t.transitionDuration),w()),z=x.pipe(S(t=>t.transitionEase),w());M({defsSelection:P,seriesLabels:h,axisSize:D,transitionDuration:b,transitionEase:z}).pipe(m(I),G(async t=>t)).subscribe(t=>{const d=[{id:v,width:t.axisSize.width,height:t.axisSize.height}].concat(t.seriesLabels.map(c=>({id:`orbcharts__clipPath_${c}`,width:t.axisSize.width,height:t.axisSize.height})));ke({defsSelection:t.defsSelection,clipPathData:d,transitionDuration:t.transitionDuration,transitionEase:t.transitionEase})});const oe=e.pipe(S(t=>{const f=new Map;return t.flat().forEach(d=>f.set(d.id,d)),f})),se=Ce({fullDataFormatter$:A,gridAxesSize$:D,computedData$:e,fullChartParams$:x,gridContainerPosition$:O,layout$:E}),ne=x.pipe(m(I),S(t=>t.highlightTarget),w()),le=h.pipe(m(I),S(t=>t.map((f,d)=>Z(o,`lineargradient-${f}`)))),ue=M({graphicGSelection:H,defsSelection:P,visibleComputedLayoutData:n,linearGradientIds:le,areaPath:Q,params:g}).pipe(m(I),G(async t=>t),S(t=>{let f=[];return t.graphicGSelection.each((d,c,R)=>{const N=_e(t.visibleComputedLayoutData[c]??[]);f[c]=we({selection:F(R[c]),pathClassName:i,areaPath:t.areaPath,segmentData:N,linearGradientIds:t.linearGradientIds,params:t.params}),Oe({defsSelection:t.defsSelection,computedData:t.visibleComputedLayoutData,linearGradientIds:t.linearGradientIds,params:t.params})}),f}));return M({pathSelectionArr:ue,computedData:e,SeriesDataMap:l,GroupDataMap:u,highlightTarget:ne,gridGroupPositionFn:se}).pipe(m(I),G(async t=>t)).subscribe(t=>{t.pathSelectionArr.forEach(f=>{f.on("mouseover",(d,c)=>{const R=c[0]?c[0].seriesLabel:"",{groupIndex:N,groupLabel:B}=t.gridGroupPositionFn(d),p=t.GroupDataMap.get(B).find(_=>_.seriesLabel===R)??c[0];k.next({type:"grid",eventName:"mouseover",pluginName:o,highlightTarget:t.highlightTarget,datum:p,gridIndex:p.gridIndex,series:t.SeriesDataMap.get(p.seriesLabel),seriesIndex:p.seriesIndex,seriesLabel:p.seriesLabel,groups:t.GroupDataMap.get(p.groupLabel),groupIndex:p.groupIndex,groupLabel:p.groupLabel,event:d,data:t.computedData})}).on("mousemove",(d,c)=>{const R=c[0]?c[0].seriesLabel:"",{groupIndex:N,groupLabel:B}=t.gridGroupPositionFn(d),p=t.GroupDataMap.get(B).find(_=>_.seriesLabel===R)??c[0];k.next({type:"grid",eventName:"mousemove",pluginName:o,highlightTarget:t.highlightTarget,datum:p,gridIndex:p.gridIndex,series:t.SeriesDataMap.get(p.seriesLabel),seriesIndex:p.seriesIndex,seriesLabel:p.seriesLabel,groups:t.GroupDataMap.get(p.groupLabel),groupIndex:p.groupIndex,groupLabel:p.groupLabel,event:d,data:t.computedData})}).on("mouseout",(d,c)=>{const R=c[0]?c[0].seriesLabel:"",{groupIndex:N,groupLabel:B}=t.gridGroupPositionFn(d),p=t.GroupDataMap.get(B).find(_=>_.seriesLabel===R)??c[0];k.next({type:"grid",eventName:"mouseout",pluginName:o,highlightTarget:t.highlightTarget,datum:p,gridIndex:p.gridIndex,series:t.SeriesDataMap.get(p.seriesLabel),seriesIndex:p.seriesIndex,seriesLabel:p.seriesLabel,groups:t.GroupDataMap.get(p.groupLabel),groupIndex:p.groupIndex,groupLabel:p.groupLabel,event:d,data:t.computedData})}).on("click",(d,c)=>{const R=c[0]?c[0].seriesLabel:"",{groupIndex:N,groupLabel:B}=t.gridGroupPositionFn(d),p=t.GroupDataMap.get(B).find(_=>_.seriesLabel===R)??c[0];k.next({type:"grid",eventName:"click",pluginName:o,highlightTarget:t.highlightTarget,datum:p,gridIndex:p.gridIndex,series:t.SeriesDataMap.get(p.seriesLabel),seriesIndex:p.seriesIndex,seriesLabel:p.seriesLabel,groups:t.GroupDataMap.get(p.groupLabel),groupIndex:p.groupIndex,groupLabel:p.groupLabel,event:d,data:t.computedData})})})}),x.pipe(m(I),Ge(t=>t.highlightTarget==="series"),G(t=>M({graphicGSelection:H,gridHighlight:$,DataMap:oe,fullChartParams:x}).pipe(m(I),G(async f=>f)))).subscribe(t=>{const f=t.gridHighlight[0]?t.gridHighlight[0].seriesLabel:null;Fe({selection:t.graphicGSelection,seriesLabel:f,fullChartParams:t.fullChartParams})}),()=>{I.next(void 0)}},ae="LineAreas",ze={name:ae,defaultParams:ge,layerIndex:ce,validator:(o,{validateColumns:s})=>s(o,{lineCurve:{toBeTypes:["string"]},linearGradientOpacity:{toBe:"[number, number]",test:r=>Array.isArray(r)&&r.length===2&&typeof r[0]=="number"&&typeof r[1]=="number"}})},at=W(ze)(({selection:o,name:s,observer:e,subject:r})=>{const a=new V,n=Ee(ae,{selection:o,computedData$:e.computedData$,visibleComputedData$:e.visibleComputedData$,computedLayoutData$:e.computedLayoutData$,visibleComputedLayoutData$:e.visibleComputedLayoutData$,seriesLabels$:e.seriesLabels$,SeriesDataMap$:e.SeriesDataMap$,GroupDataMap$:e.GroupDataMap$,fullParams$:e.fullParams$,fullDataFormatter$:e.fullDataFormatter$,fullChartParams$:e.fullChartParams$,gridAxesTransform$:e.gridAxesTransform$,gridGraphicTransform$:e.gridGraphicTransform$,gridAxesSize$:e.gridAxesSize$,gridHighlight$:e.gridHighlight$,gridContainerPosition$:e.gridContainerPosition$,allContainerPosition$:e.gridContainerPosition$,layout$:e.layout$,event$:r.event$});return()=>{a.next(void 0),n()}}),ie="Dots",Ne={name:ie,defaultParams:de,layerIndex:me,validator:(o,{validateColumns:s})=>s(o,{radius:{toBeTypes:["number"]},fillColorType:{toBeOption:"ColorType"},strokeColorType:{toBeOption:"ColorType"},strokeWidth:{toBeTypes:["number"]},onlyShowHighlighted:{toBeTypes:["boolean"]}})},it=W(Ne)(({selection:o,name:s,subject:e,observer:r})=>{const a=new V,n=Me(ie,{selection:o,computedData$:r.computedData$,computedLayoutData$:r.computedLayoutData$,visibleComputedData$:r.visibleComputedData$,visibleComputedLayoutData$:r.visibleComputedLayoutData$,seriesLabels$:r.seriesLabels$,SeriesDataMap$:r.SeriesDataMap$,GroupDataMap$:r.GroupDataMap$,fullParams$:r.fullParams$,fullChartParams$:r.fullChartParams$,gridAxesTransform$:r.gridAxesTransform$,gridGraphicTransform$:r.gridGraphicTransform$,gridGraphicReverseScale$:r.gridGraphicReverseScale$,gridAxesSize$:r.gridAxesSize$,gridHighlight$:r.gridHighlight$,gridContainerPosition$:r.gridContainerPosition$,event$:e.event$});return()=>{a.next(void 0),n()}}),re="StackedValueAxis",Ve={name:re,defaultParams:he,layerIndex:xe,validator:(o,{validateColumns:s})=>s(o,{labelOffset:{toBe:"[number, number]",test:r=>Array.isArray(r)&&r.length===2&&typeof r[0]=="number"&&typeof r[1]=="number"},labelColorType:{toBeOption:"ColorType"},axisLineVisible:{toBeTypes:["boolean"]},axisLineColorType:{toBeOption:"ColorType"},ticks:{toBeTypes:["number","null"]},tickFormat:{toBeTypes:["string","Function"]},tickLineVisible:{toBeTypes:["boolean"]},tickPadding:{toBeTypes:["number"]},tickFullLine:{toBeTypes:["boolean"]},tickFullLineDasharray:{toBeTypes:["string"]},tickColorType:{toBeOption:"ColorType"},tickTextRotate:{toBeTypes:["number"]},tickTextColorType:{toBeOption:"ColorType"}})},rt=W(Ve)(({selection:o,name:s,observer:e,subject:r})=>{const a=new V,n=Re(re,{selection:o,computedData$:e.computedStackedData$,filteredMinMaxValue$:e.filteredMinMaxValue$,fullParams$:e.fullParams$,fullDataFormatter$:e.fullDataFormatter$,fullChartParams$:e.fullChartParams$,gridAxesTransform$:e.gridAxesTransform$,gridAxesReverseTransform$:e.gridAxesReverseTransform$,gridAxesSize$:e.gridAxesSize$,gridContainerPosition$:e.gridContainerPosition$,isSeriesSeprate$:e.isSeriesSeprate$});return()=>{a.next(void 0),n()}}),U="GroupAux",J=X(U,"label-box"),ve={name:U,defaultParams:$e,layerIndex:ye,validator:(o,{validateColumns:s})=>s(o,{showLine:{toBeTypes:["boolean"]},showLabel:{toBeTypes:["boolean"]},lineDashArray:{toBeTypes:["string"]},lineColorType:{toBeOption:"ColorType"},labelColorType:{toBeOption:"ColorType"},labelTextColorType:{toBeOption:"ColorType"},labelTextFormat:{toBeTypes:["string","Function"]},labelPadding:{toBeTypes:["number"]},labelRotate:{toBeTypes:["number"]}})};function He({groupLabel:o,axisX:s,axisHeight:e,fullParams:r}){return r.showLine&&o?[{id:o,x1:s,x2:s,y1:0,y2:e}]:[]}function Ue({groupLabel:o,axisX:s,fullParams:e,textSizePx:r,rowAmount:a}){const n=Pe(o,e.labelTextFormat),h=n.split(`
`),l=h.reduce((A,x)=>x.length>A.length?x:A,""),u=be(l,r),g=r*h.length;return e.showLabel&&o?[{id:o,x:s,y:-e.labelPadding*a,text:n,textArr:h,textWidth:u,textHeight:g}]:[]}function Xe({selection:o,pluginName:s,lineData:e,fullParams:r,fullChartParams:a}){const n=X(s,"auxline");return o.selectAll(`line.${n}`).data(e).join(l=>l.append("line").classed(n,!0).style("stroke-width",1).style("pointer-events","none").style("vector-effect","non-scaling-stroke").attr("x1",u=>u.x1).attr("y1",u=>u.y1).attr("x2",u=>u.x2).attr("y2",u=>u.y2),l=>l.transition().duration(50).attr("x1",g=>g.x1).attr("y1",g=>g.y1).attr("x2",g=>g.x2).attr("y2",g=>g.y2),l=>l.remove()).style("stroke",l=>q(r.lineColorType,a)).style("stroke-dasharray",r.lineDashArray??"none")}function We(o){o.selectAll("line").data([]).exit().remove()}function Ye({selection:o,labelData:s,fullParams:e,fullDataFormatter:r,fullChartParams:a,textReverseTransformWithRotate:n,textSizePx:h}){return o.selectAll(`g.${J}`).data(s).join(u=>u.append("g").classed(J,!0).style("cursor","pointer").attr("transform",(g,A)=>`translate(${g.x}, ${g.y})`),u=>u.transition().duration(50).attr("transform",(A,x)=>`translate(${A.x}, ${A.y})`),u=>u.remove()).each((u,g,A)=>{const x=u.textWidth+12,C=u.textHeight+6;let T=-x/2,D=-2;r.groupAxis.position==="bottom"?(T=e.labelRotate?-x+C:-x/2,D=2):r.groupAxis.position==="left"?(T=-x+2,D=-C/2):r.groupAxis.position==="right"?(T=-2,D=-C/2):r.groupAxis.position==="top"&&(T=e.labelRotate?-x+C:-x/2,D=-C+2),F(A[g]).selectAll("rect").data([u]).join($=>$.append("rect").style("cursor","pointer").attr("rx",5).attr("ry",5),$=>$,$=>$.remove()).attr("width",$=>`${x}px`).attr("height",`${C}px`).attr("fill",$=>q(e.labelColorType,a)).attr("x",T).attr("y",D-3).style("transform",n),F(A[g]).selectAll("text").data([u]).join($=>$.append("text").style("dominant-baseline","hanging").style("cursor","pointer"),$=>$,$=>$.remove()).style("transform",n).attr("fill",$=>q(e.labelTextColorType,a)).attr("font-size",a.styles.textSize).attr("x",T+6).attr("y",D).each(($,O,E)=>{fe(F(E[O]),{textArr:u.textArr,textSizePx:h,groupAxisPosition:r.groupAxis.position})})})}function je(o){o.selectAll(`g.${J}`).data([]).exit().remove()}const ot=W(ve)(({selection:o,rootSelection:s,name:e,subject:r,observer:a})=>{const n=new V;let h=!1;const l=s.insert("rect","g").classed(X(U,"rect"),!0).attr("opacity",0),{seriesSelection$:u,axesSelection$:g,defsSelection$:A,graphicGSelection$:x}=te({selection:o,pluginName:U,clipPathID:"test",seriesLabels$:a.isSeriesSeprate$.pipe(G(i=>De(()=>i,a.seriesLabels$,a.seriesLabels$.pipe(S(L=>[L[0]]))))),gridContainerPosition$:a.gridContainerPosition$,gridAxesTransform$:a.gridAxesTransform$,gridGraphicTransform$:a.gridGraphicTransform$});a.layout$.pipe(m(n)).subscribe(i=>{l.attr("width",i.rootWidth).attr("height",i.rootHeight)});const C=M({groupScaleDomainValue:a.groupScaleDomainValue$,gridAxesSize:a.gridAxesSize$}).pipe(m(n),G(async i=>i),S(i=>Se().domain(i.groupScaleDomainValue).range([0,i.gridAxesSize.width]))),T=a.fullChartParams$.pipe(m(n),S(i=>i.highlightTarget),w()),D=ee(s,"mousemove").pipe(m(n)),$=M({gridAxesReverseTransform:a.gridAxesReverseTransform$,gridContainerPosition:a.gridContainerPosition$}).pipe(m(n),G(async i=>i),S(i=>{const L=`rotateX(${i.gridAxesReverseTransform.rotateX}deg) rotateY(${i.gridAxesReverseTransform.rotateY}deg)`,y=`rotate(${i.gridAxesReverseTransform.rotate}deg)`,P=`scale(${1/i.gridContainerPosition[0].scale[0]}, ${1/i.gridContainerPosition[0].scale[1]})`;return`${L} ${y} ${P}`}),w()),O=M({textReverseTransform:$,fullParams:a.fullParams$}).pipe(m(n),G(async i=>i),S(i=>`${i.textReverseTransform} rotate(${i.fullParams.labelRotate}deg)`)),E=a.gridContainerPosition$.pipe(m(n),S(i=>i.reduce((y,P)=>P.columnIndex>y?P.columnIndex:y,0)+1),w()),k=a.gridContainerPosition$.pipe(m(n),S(i=>i.reduce((y,P)=>P.rowIndex>y?P.rowIndex:y,0)+1),w()),I=Ie({rootSelection:s,fullDataFormatter$:a.fullDataFormatter$,gridAxesSize$:a.gridAxesSize$,computedData$:a.computedData$,fullChartParams$:a.fullChartParams$,gridContainerPosition$:a.gridContainerPosition$,layout$:a.layout$}).pipe(m(n));M({axesSelection:g,columnAmount:E,rowAmount:k,layout:a.layout$,rootMousemove:D,gridGroupPosition:I,computedData:a.computedData$,groupScale:C,gridAxesSize:a.gridAxesSize$,fullParams:a.fullParams$,fullDataFormatter:a.fullDataFormatter$,fullChartParams:a.fullChartParams$,highlightTarget:T,textReverseTransformWithRotate:O,GroupDataMap:a.GroupDataMap$,textSizePx:a.textSizePx$}).pipe(m(n),G(async i=>i)).subscribe(i=>{const{groupIndex:L,groupLabel:y}=i.gridGroupPosition,P=i.groupScale(L)??0,H=He({groupLabel:y,axisX:P,axisHeight:i.gridAxesSize.height,fullParams:i.fullParams});Xe({selection:i.axesSelection,pluginName:e,lineData:H,fullParams:i.fullParams,fullChartParams:i.fullChartParams});const Y=Ue({groupLabel:y,axisX:P,fullParams:i.fullParams,textSizePx:i.textSizePx,rowAmount:i.rowAmount});Ye({selection:i.axesSelection,labelData:Y,fullParams:i.fullParams,fullDataFormatter:i.fullDataFormatter,fullChartParams:i.fullChartParams,textReverseTransformWithRotate:i.textReverseTransformWithRotate,textSizePx:i.textSizePx}).on("mouseover",(b,z)=>{b.stopPropagation(),h=!0,r.event$.next({type:"grid",pluginName:e,eventName:"mouseover",highlightTarget:i.highlightTarget,datum:null,gridIndex:0,series:[],seriesIndex:-1,seriesLabel:"",groups:i.GroupDataMap.get(y)??[],groupIndex:L,groupLabel:y,event:b,data:i.computedData})}).on("mousemove",(b,z)=>{b.stopPropagation(),r.event$.next({type:"grid",pluginName:e,eventName:"mousemove",highlightTarget:i.highlightTarget,datum:null,gridIndex:0,series:[],seriesIndex:-1,seriesLabel:"",groups:i.GroupDataMap.get(y)??[],groupIndex:L,groupLabel:y,event:b,data:i.computedData})}).on("mouseout",(b,z)=>{b.stopPropagation(),h=!1,r.event$.next({type:"grid",pluginName:e,eventName:"mouseout",highlightTarget:i.highlightTarget,datum:null,gridIndex:0,series:[],seriesIndex:-1,seriesLabel:"",groups:i.GroupDataMap.get(y)??[],groupIndex:L,groupLabel:y,event:b,data:i.computedData})}).on("click",(b,z)=>{b.stopPropagation(),r.event$.next({type:"grid",pluginName:e,eventName:"click",highlightTarget:i.highlightTarget,datum:null,gridIndex:0,series:[],seriesIndex:-1,seriesLabel:"",groups:i.GroupDataMap.get(y)??[],groupIndex:L,groupLabel:y,event:b,data:i.computedData})})});const v=ee(l,"mouseout").pipe(m(n));return M({rootRectMouseout:v,axesSelection:g}).pipe(m(n),G(async i=>i)).subscribe(i=>{setTimeout(()=>{h!=!0&&(We(i.axesSelection),je(i.axesSelection))})}),()=>{n.next(void 0),l.remove()}});export{it as D,ot as G,at as L,rt as S,Ee as c};
